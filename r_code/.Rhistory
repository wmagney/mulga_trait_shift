# testing performance of model against OLS
lrtest(self.thin)
#create frontier model. rainfall and landform are exogenous variables with landform nested within rainfall
max.m2 <- sfa(logbiomass.m2 ~ log.sub.dens * rainfall, data = stem_plots)
summary(max.m2, extraPar = T)
# testing performance of model against OLS
lrtest(max.m2)
ggplot(stem_plots, aes(subplot_density, biomass.m2, colour = rainfall)) +
geom_point(aes(shape = factor(landform))) +
scale_x_log10() +
scale_y_log10()+
geom_smooth(method = "lm", formula = y ~ x, se = FALSE, color = "red",linetype = "solid", intercept = 2.268333, slope = 0.326692)+
geom_smooth(method = "lm", formula = y ~ x, se = FALSE, color = "green",linetype = "solid", intercept =  3.859734, slope = 0.787788)+
labs(x = "Subplot Density", y = "Biomass/m2", color = "Rainfall", shape = "Landform") +
theme_minimal()
ggplot(stem_plots, aes(subplot_density, biomass.m2, colour = rainfall)) +
geom_point(aes(shape = factor(landform))) +
scale_x_log10() +
scale_y_log10()+
geom_smooth(method = "lm", formula = y ~ x, se = FALSE, color = "red",linetype = "solid", intercept = 3.859734, slope = 0.787788)+
#geom_smooth(method = "lm", formula = y ~ x, se = FALSE, color = "green",linetype = "solid", intercept =  3.859734, slope = 0.787788)+
labs(x = "Subplot Density", y = "Biomass/m2", color = "Rainfall", shape = "Landform") +
theme_minimal()
ggplot(stem_plots, aes(subplot_density, biomass.m2, colour = rainfall)) +
geom_point(aes(shape = factor(landform))) +
scale_x_log10() +
scale_y_log10()+
geom_abline(intercept = 2.268333, slope = 0.326692, linetype = "solid", color = "red") +
geom_smooth(method = "lm", formula = y ~ x, se = FALSE, color = "green",linetype = "solid", intercept =  3.859734, slope = 0.787788)+
labs(x = "Subplot Density", y = "Biomass/m2", color = "Rainfall", shape = "Landform") +
theme_minimal()
ggplot(stem_plots, aes(subplot_density, biomass.m2, colour = rainfall)) +
geom_point(aes(shape = factor(landform))) +
scale_x_log10() +
scale_y_log10()+
geom_abline(intercept = 2.268333, slope = 0.326692, linetype = "solid", color = "red") +
labs(x = "Subplot Density", y = "Biomass/m2", color = "Rainfall", shape = "Landform") +
theme_minimal()
ggplot(stem_plots, aes(subplot_density, biomass.m2, colour = rainfall)) +
geom_point(aes(shape = factor(landform))) +
scale_x_log10() +
scale_y_log10()+
geom_abline(intercept = 2.268333, slope = 0.326692, linetype = "solid", color = "red") +
labs(x = "Subplot Density", y = "Biomass/m2", color = "Rainfall", shape = "Landform") +
theme_minimal()+
xlim(1e-4, 1e6) +
ylim(1e-1, 1e5)
ggplot(stem_plots, aes(subplot_density, biomass.m2, colour = rainfall)) +
geom_point(aes(shape = factor(landform))) +
scale_x_log10() +
scale_y_log10()+
geom_abline(intercept = 2.268333, slope = 0.326692, linetype = "solid", color = "red") +
labs(x = "Subplot Density", y = "Biomass/m2", color = "Rainfall", shape = "Landform") +
theme_minimal()+
xlim(0, 200) +
ylim(0, 200)
ggplot(stem_plots, aes(subplot_density, biomass.m2, colour = rainfall)) +
geom_point(aes(shape = factor(landform))) +
scale_x_log10() +
scale_y_log10()+
geom_abline(intercept = 2.268333, slope = 0.326692, linetype = "solid", color = "red") +
labs(x = "Subplot Density", y = "Biomass/m2", color = "Rainfall", shape = "Landform") +
theme_minimal()+
xlim(0, 20) +
ylim(0, 20)
ggplot(stem_plots, aes(subplot_density, biomass.m2, colour = rainfall)) +
geom_point(aes(shape = factor(landform))) +
scale_x_log10() +
scale_y_log10()+
geom_abline(intercept = 2.268333, slope = 0.326692, linetype = "solid", color = "red") +
labs(x = "Subplot Density", y = "Biomass/m2", color = "Rainfall", shape = "Landform") +
theme_minimal()+
xlim(0, 20) +
ylim(0, 5)
ggplot(stem_plots, aes(subplot_density, biomass.m2, colour = rainfall)) +
geom_point(aes(shape = factor(landform))) +
scale_x_log10() +
scale_y_log10()+
geom_abline(intercept = 2.268333, slope = 0.326692, linetype = "solid", color = "red") +
labs(x = "Subplot Density", y = "Biomass/m2", color = "Rainfall", shape = "Landform") +
theme_minimal()+
xlim(0, 5) +
ylim(0, 20)
ggplot(stem_plots, aes(subplot_density, biomass.m2, colour = rainfall)) +
geom_point(aes(shape = factor(landform))) +
scale_x_log10() +
scale_y_log10()+
geom_abline(intercept = 2.268333, slope = 0.326692, linetype = "solid", color = "red") +
labs(x = "Subplot Density", y = "Biomass/m2", color = "Rainfall", shape = "Landform") +
theme_minimal()+
xlim(0, 1) +
ylim(0, 10)
ggplot(stem_plots, aes(subplot_density, biomass.m2, colour = rainfall)) +
geom_point(aes(shape = factor(landform))) +
scale_x_log10() +
scale_y_log10()+
geom_abline(intercept = 2.268333, slope = 0.326692, linetype = "solid", color = "red") +
labs(x = "Subplot Density", y = "Biomass/m2", color = "Rainfall", shape = "Landform") +
theme_minimal()+
#xlim(0, 1) +
# ylim(0, 10)
ggplot(stem_plots, aes(subplot_density, biomass.m2, colour = rainfall)) +
geom_point(aes(shape = factor(landform))) +
scale_x_log10() +
scale_y_log10()+
geom_abline(intercept = 2.268333, slope = 0.326692, linetype = "solid", color = "red") +
labs(x = "Subplot Density", y = "Biomass/m2", color = "Rainfall", shape = "Landform") +
theme_minimal()
#xlim(0, 1) +
# ylim(0, 10)
ggplot(stem_plots, aes(subplot_density, biomass.m2, colour = rainfall)) +
geom_point(aes(shape = factor(landform))) +
scale_x_log10() +
scale_y_log10()+
geom_abline(intercept = 2.268333, slope = 0.326692, linetype = "solid", color = "red") +
labs(x = "Subplot Density", y = "Biomass/m2", color = "Rainfall", shape = "Landform") +
theme_minimal()
xlim(0, 1) +
ylim(0, 10)
ggplot(stem_plots, aes(subplot_density, biomass.m2, colour = rainfall)) +
geom_point(aes(shape = factor(landform))) +
scale_x_log10() +
scale_y_log10()+
geom_abline(intercept = 2.268333, slope = 0.326692, linetype = "solid", color = "red") +
labs(x = "Subplot Density", y = "Biomass/m2", color = "Rainfall", shape = "Landform") +
theme_minimal()+
xlim(0, 1) +
ylim(0, 10)
library(dplyr)
library(ggplot2)
# Calculate the maximum biomass for each level of rainfall
max_biomass <- stem_plots %>%
group_by(rainfall) %>%
summarise(max_biomass = max(biomass.m2))
# Plot the maximum biomass curve
ggplot(stem_plots, aes(subplot_density, biomass.m2, colour = rainfall)) +
geom_point(aes(shape = factor(landform))) +
scale_x_log10() +
scale_y_log10() +
geom_line(data = max_biomass, aes(y = max_biomass), linetype = "solid", color = "red") +
labs(x = "Subplot Density", y = "Biomass/m2", color = "Rainfall", shape = "Landform") +
theme_minimal()
ggplot(stem_plots, aes(log(subplot_density), log(biomass.m2), colour = rainfall)) +
geom_point(aes(shape = factor(landform))) +
geom_abline(intercept = 2.268333, slope = 0.326692, linetype = "solid", color = "red") +
labs(x = "Subplot Density", y = "Biomass/m2", color = "Rainfall", shape = "Landform") +
theme_minimal()
ggplot(stem_plots, aes(log(subplot_density), log(biomass.m2), colour = rainfall)) +
geom_point(aes(shape = factor(landform))) +
geom_abline(intercept = 2.268333, slope = 0.326692, linetype = "solid", color = "red") +
geom_abline(intercept = 3.859734, slope = 0.787788, linetype = "solid", color = "red") +
labs(x = "Subplot Density", y = "Biomass/m2", color = "Rainfall", shape = "Landform") +
theme_minimal()
ggplot(stem_plots, aes(log(subplot_density), log(biomass.m2), colour = rainfall)) +
geom_point(aes(shape = factor(landform))) +
geom_abline(intercept = 2.268333, slope = 0.326692, linetype = "solid", color = "red") +
geom_abline(intercept = 3.859734, slope = 0.787788, linetype = "solid", color = "green") +
labs(x = "Subplot Density", y = "Biomass/m2", color = "Rainfall", shape = "Landform") +
theme_minimal()
ggplot(stem_plots, aes(log(subplot_density), log(biomass.m2), colour = rainfall)) +
geom_point(aes(shape = factor(landform))) +
geom_abline(intercept = 2.268333, slope = 0.326692, linetype = "solid", color = "red") +
geom_abline(intercept = 3.859734, slope = 0.787788, linetype = "solid", color = "dark green") +
labs(x = "Subplot Density", y = "Biomass/m2", color = "Rainfall", shape = "Landform") +
theme_minimal()
total_plots <- read_csv("plot_data/total_plots.csv")%>%
mutate(
landform = as.factor(landform),
plots = as.factor(plots),
rainfall = factor(rainfall, levels = c("high", "moderate" , "low")))
summary(total_plots)
#calculate basal area
basal_area <- total_plots %>%
gather("d_10", "diamiter", starts_with ("d_"))%>%
mutate(basal_area = (diamiter*0.5)^2*3.14159265359)%>%
arrange(tree)%>%
filter(!is.na(diamiter))
# using the accacia allometric equation from feller 1980 we will calculate biomass for each tree based on a "stem by stem" analysis.
# see "Review of Allometric Relationships for Estimating Woody Biomass for New South Wales, the Australian Capital Territory, Victoria, Tasmania and South Australia" (page 36)
D2H_model <- basal_area %>%
mutate(
dbh = (diamiter*0.798)-0.577,
stem_log_biomass = log(1.9+ 424.9 * (dbh/100)^2 * (height/100)),
stem_biomass = exp(stem_log_biomass),
branch_log_biomass = log(208) + log((dbh/100)^2 * (height/100)),
branch_biomass = exp(branch_log_biomass),
leave_log_biomass = log(8) + log((dbh/100)^2 * (height/100)),
leave_biomass = exp(leave_log_biomass))%>%
group_by(tree, height, landform, plots, rainfall, subplot, sub_plot_area, subplot_density, plot_density)%>%
summarise(trunk_log_biomass = sum(stem_log_biomass),
trunk_biomass = sum(stem_biomass),
lim_log_biomass = sum(branch_log_biomass),
lim_biomass = sum(branch_biomass),
phylode_log_biomass = sum(leave_log_biomass),
phylode_biomass = sum(leave_biomass),
diamiter = sum(dbh),
basal_area = sum(basal_area),
.groups = "drop")%>%
mutate(
biomass = trunk_biomass + lim_biomass + phylode_biomass,
log_biomass = log(biomass))
#d2h plot level biomass
plot_D2h <- D2H_model%>%
aggregate(biomass ~ subplot + landform + sub_plot_area + plots + rainfall + subplot_density + plot_density, sum)%>%
mutate(
biomass.m2 = biomass/sub_plot_area,
logbiomass.m2 = log(biomass.m2),
log.sub.dens = log(subplot_density))
#plot level biomass
avereage_suplot_biomass <- D2H_model %>%
group_by(subplot)%>%
summarise(
ave.AGB = mean(biomass)) %>% ungroup()
stem_plots <- left_join(plot_D2h, avereage_suplot_biomass, by = "subplot")
summary(stem_plots)
#combind basal area for multi stemmed trees for a "combined stem analysis"
ind_biomass <- basal_area%>%
group_by(tree, height, landform, plots, rainfall, subplot, sub_plot_area, subplot_density, plot_density)%>%
summarise(basal_area = sum(basal_area),.groups = "drop")%>%
mutate(
#back tranform total_basal_area to diamiter
diamiter = case_when( rainfall == "low" ~ ((sqrt(basal_area/3.14159265359))*2),
rainfall == "moderate" ~ ((sqrt(basal_area/3.14159265359))*2),
rainfall == "high" ~ ((sqrt(basal_area/3.14159265359))*2)*0.798)-0.577, # converting d10 to d130
# Equations taken from -> Paul et al, "testing the generality of above ground ind_biomass allometry across plant functional types at the continent scale" -> Fmulti "ln(AGB) = 2.474ln(D10)-2.757" used for lower rainfall sites (page 9)
logAGB = case_when(rainfall == 'low' ~ 2.474*log(diamiter)-2.757,
rainfall == 'moderate' ~ 2.474*log(diamiter)-2.757,
rainfall == 'high' ~ 2.220*log(diamiter)-1.693),
# correctional factors taken form relevant equations in respective papers. CF for high rainfall taken form average of Acacia trees paul and roxburgh 2013.
AGB = case_when( rainfall == 'low' ~ exp(logAGB)*1.0787,
rainfall == 'moderate' ~ exp(logAGB)*1.0787,
rainfall == 'high' ~ exp(logAGB)*1.0436))
#plot level biomass
plot_biomass <- ind_biomass%>%
aggregate(AGB ~ subplot + landform + sub_plot_area + plots + rainfall + subplot_density + plot_density, sum)%>%
mutate(
biomass.m2 = AGB/sub_plot_area,
logbiomass.m2 = log(biomass.m2),
log.sub.dens = log(subplot_density))
#extract efficiency data and add to data set
stem_plots$max.eff <- frontier::efficiencies(max.m2)
inefficiency <- frontier::efficiencies(max.m2)
efficiency <- 1 - inefficiency
stem_plots$max.Ef.Fr <- efficiency
summary(stem_plots)
#create frontier model. rainfall and landform are exogenous variables with landform nested within rainfall
max.m2 <- sfa(logbiomass.m2 ~ log.sub.dens * rainfall, data = stem_plots)
summary(max.m2, extraPar = T)
# testing performance of model against OLS
lrtest(max.m2)
ggplot(stem_plots, aes(log(subplot_density), log(biomass.m2), colour = rainfall)) +
geom_point(aes(shape = factor(landform))) +
geom_abline(intercept = 2.268333, slope = 0.326692, linetype = "solid", color = "red") +
geom_abline(intercept = 3.859734, slope = 0.787788, linetype = "solid", color = "dark green") +
geom_abline(intercept = 1.750087  , slope = -0.088450 , linetype = "solid", color = "dark green") +
labs(x = "Subplot Density", y = "Biomass/m2", color = "Rainfall", shape = "Landform") +
theme_minimal()
ggplot(stem_plots, aes(log(subplot_density), log(biomass.m2), colour = rainfall)) +
geom_point(aes(shape = factor(landform))) +
geom_abline(intercept = 2.268333, slope = 0.326692, linetype = "solid", color = "red") +
geom_abline(intercept = 3.859734, slope = 0.787788, linetype = "solid", color = "dark green") +
geom_abline(intercept = 1.750087  , slope = -0.088450 , linetype = "solid", color = "dark blue") +
labs(x = "Subplot Density", y = "Biomass/m2", color = "Rainfall", shape = "Landform") +
theme_minimal()
ggplot(stem_plots, aes(log(subplot_density), log(biomass.m2), colour = rainfall)) +
geom_point(aes(shape = factor(landform))) +
geom_abline(intercept = 2.268333, slope = 0.326692, linetype = "solid", color = "red") +
geom_abline(intercept = 3.859734, slope = 0.787788, linetype = "solid", color = "dark green") +
geom_abline(intercept = 1.750087  , slope = -0.088450 , linetype = "solid", color = "blue", size = 1.5) +
labs(x = "Subplot Density", y = "Biomass/m2", color = "Rainfall", shape = "Landform") +
theme_minimal()
ggplot(stem_plots, aes(log(subplot_density), log(biomass.m2), colour = rainfall)) +
geom_point(aes(shape = factor(landform))) +
geom_abline(intercept = 2.268333, slope = 0.326692, linetype = "solid", color = "red") +
geom_abline(intercept = 3.859734, slope = 0.787788, linetype = "solid", color = "dark green") +
geom_abline(intercept = 1.750087  , slope = -0.088450 , linetype = "solid", color = "blue", size = 1.) +
labs(x = "Subplot Density", y = "Biomass/m2", color = "Rainfall", shape = "Landform") +
theme_minimal()
ggplot(stem_plots, aes(log(subplot_density), log(biomass.m2), colour = rainfall)) +
geom_point(aes(shape = factor(landform))) +
geom_abline(intercept = 2.268333, slope = 0.326692, linetype = "solid", color = "red", size = 1) +
geom_abline(intercept = 3.859734, slope = 0.787788, linetype = "solid", color = "dark green", size = 1) +
geom_abline(intercept = 1.750087  , slope = -0.088450 , linetype = "solid", color = "blue", size = 1.) +
labs(x = "Subplot Density", y = "Biomass/m2", color = "Rainfall", shape = "Landform") +
theme_minimal()
ggplot(stem_plots, aes(log(subplot_density), log(biomass.m2), colour = rainfall)) +
geom_point(aes(shape = factor(landform))) +
geom_abline(intercept = 2.268333, slope = 0.326692, linetype = "solid", color = "red", size = 1) +
geom_abline(intercept = 3.859734, slope = 0.787788, linetype = "solid", color = "dark green", size = 1) +
geom_abline(intercept = 1.750087  , slope = -0.088450 , linetype = "solid", color = "blue", size = 1) +
labs(x = "Subplot Density", y = "Biomass/m2", color = "Rainfall", shape = "Landform") +
theme_minimal()
# plotted self thining
ggplot(stem_plots, aes(log(subplot_density), log(ave.AGB), colour = rainfall)) +
geom_point(aes(shape = factor(landform)))
# plotted maximum biomass efficiency frontiers
ggplot(stem_plots, aes(log(subplot_density), log(biomass.m2), colour = rainfall)) +
geom_point(aes(shape = factor(landform))) +
geom_abline(intercept = 2.268333, slope = 0.326692, linetype = "solid", color = "red", size = 1) +
geom_abline(intercept = 3.859734, slope = 0.787788, linetype = "solid", color = "dark green", size = 1) +
geom_abline(intercept = 1.750087  , slope = -0.088450 , linetype = "solid", color = "blue", size = 1) +
labs(x = "Subplot Density", y = "Biomass/m2", color = "Rainfall", shape = "Landform") +
theme_cowplot()
# plotted self thining
ggplot(stem_plots, aes(log(subplot_density), log(ave.AGB), colour = rainfall)) +
geom_point(aes(shape = factor(landform)))+
geom_abline(intercept = 2.268333, slope = 0.326692, linetype = "solid", color = "red", size = 1) +
geom_abline(intercept = 3.859734, slope = 0.787788, linetype = "solid", color = "dark green", size = 1) +
geom_abline(intercept =  3.417942  , slope = - -0.362591 , linetype = "solid", color = "blue", size = 1) +
# plotted self thining
ggplot(stem_plots, aes(log(subplot_density), log(ave.AGB), colour = rainfall)) +
geom_point(aes(shape = factor(landform)))+
geom_abline(intercept = 2.268333, slope = 0.326692, linetype = "solid", color = "red", size = 1) +
geom_abline(intercept = 3.859734, slope = 0.787788, linetype = "solid", color = "dark green", size = 1) +
geom_abline(intercept =  3.417942  , slope = - -0.362591 , linetype = "solid", color = "blue", size = 1)
# plotted self thining
ggplot(stem_plots, aes(log(subplot_density), log(ave.AGB), colour = rainfall)) +
geom_point(aes(shape = factor(landform)))+
geom_abline(intercept = 2.268333, slope = 0.326692, linetype = "solid", color = "red", size = 1) +
geom_abline(intercept = 3.859734, slope = 0.787788, linetype = "solid", color = "dark green", size = 1) +
geom_abline(intercept =  3.417942  , slope = -0.362591 , linetype = "solid", color = "blue", size = 1)
total_plots <- read_csv("plot_data/total_plots.csv")%>%
mutate(
landform = as.factor(landform),
plots = as.factor(plots),
rainfall = factor(rainfall, levels = c("low", "moderate" , "high")))
summary(total_plots)
#calculate basal area
basal_area <- total_plots %>%
gather("d_10", "diamiter", starts_with ("d_"))%>%
mutate(basal_area = (diamiter*0.5)^2*3.14159265359)%>%
arrange(tree)%>%
filter(!is.na(diamiter))
# using the accacia allometric equation from feller 1980 we will calculate biomass for each tree based on a "stem by stem" analysis.
# see "Review of Allometric Relationships for Estimating Woody Biomass for New South Wales, the Australian Capital Territory, Victoria, Tasmania and South Australia" (page 36)
D2H_model <- basal_area %>%
mutate(
dbh = (diamiter*0.798)-0.577,
stem_log_biomass = log(1.9+ 424.9 * (dbh/100)^2 * (height/100)),
stem_biomass = exp(stem_log_biomass),
branch_log_biomass = log(208) + log((dbh/100)^2 * (height/100)),
branch_biomass = exp(branch_log_biomass),
leave_log_biomass = log(8) + log((dbh/100)^2 * (height/100)),
leave_biomass = exp(leave_log_biomass))%>%
group_by(tree, height, landform, plots, rainfall, subplot, sub_plot_area, subplot_density, plot_density)%>%
summarise(trunk_log_biomass = sum(stem_log_biomass),
trunk_biomass = sum(stem_biomass),
lim_log_biomass = sum(branch_log_biomass),
lim_biomass = sum(branch_biomass),
phylode_log_biomass = sum(leave_log_biomass),
phylode_biomass = sum(leave_biomass),
diamiter = sum(dbh),
basal_area = sum(basal_area),
.groups = "drop")%>%
mutate(
biomass = trunk_biomass + lim_biomass + phylode_biomass,
log_biomass = log(biomass))
#d2h plot level biomass
plot_D2h <- D2H_model%>%
aggregate(biomass ~ subplot + landform + sub_plot_area + plots + rainfall + subplot_density + plot_density, sum)%>%
mutate(
biomass.m2 = biomass/sub_plot_area,
logbiomass.m2 = log(biomass.m2),
log.sub.dens = log(subplot_density))
#plot level biomass
avereage_suplot_biomass <- D2H_model %>%
group_by(subplot)%>%
summarise(
ave.AGB = mean(biomass)) %>% ungroup()
stem_plots <- left_join(plot_D2h, avereage_suplot_biomass, by = "subplot")
summary(stem_plots)
#combind basal area for multi stemmed trees for a "combined stem analysis"
ind_biomass <- basal_area%>%
group_by(tree, height, landform, plots, rainfall, subplot, sub_plot_area, subplot_density, plot_density)%>%
summarise(basal_area = sum(basal_area),.groups = "drop")%>%
mutate(
#back tranform total_basal_area to diamiter
diamiter = case_when( rainfall == "low" ~ ((sqrt(basal_area/3.14159265359))*2),
rainfall == "moderate" ~ ((sqrt(basal_area/3.14159265359))*2),
rainfall == "high" ~ ((sqrt(basal_area/3.14159265359))*2)*0.798)-0.577, # converting d10 to d130
# Equations taken from -> Paul et al, "testing the generality of above ground ind_biomass allometry across plant functional types at the continent scale" -> Fmulti "ln(AGB) = 2.474ln(D10)-2.757" used for lower rainfall sites (page 9)
logAGB = case_when(rainfall == 'low' ~ 2.474*log(diamiter)-2.757,
rainfall == 'moderate' ~ 2.474*log(diamiter)-2.757,
rainfall == 'high' ~ 2.220*log(diamiter)-1.693),
# correctional factors taken form relevant equations in respective papers. CF for high rainfall taken form average of Acacia trees paul and roxburgh 2013.
AGB = case_when( rainfall == 'low' ~ exp(logAGB)*1.0787,
rainfall == 'moderate' ~ exp(logAGB)*1.0787,
rainfall == 'high' ~ exp(logAGB)*1.0436))
#plot level biomass
plot_biomass <- ind_biomass%>%
aggregate(AGB ~ subplot + landform + sub_plot_area + plots + rainfall + subplot_density + plot_density, sum)%>%
mutate(
biomass.m2 = AGB/sub_plot_area,
logbiomass.m2 = log(biomass.m2),
log.sub.dens = log(subplot_density))
#create frontier model.
self.thin <- sfa(log(ave.AGB) ~ log.sub.dens*rainfall/landform, data = stem_plots)
summary(self.thin, extraPar = T)
# testing performance of model against OLS
lrtest(self.thin)
# plotted self thining
ggplot(stem_plots, aes(log(subplot_density), log(ave.AGB), colour = rainfall)) +
geom_point(aes(shape = factor(landform)))+
geom_abline(intercept = 3.147408, slope = 0.020039, linetype = "solid", color = "red", size = 1) +
geom_abline(intercept = 3.859734, slope = 0.787788, linetype = "solid", color = "dark green", size = 1) +
geom_abline(intercept =  3.417942  , slope = -0.362591 , linetype = "solid", color = "blue", size = 1)
total_plots <- read_csv("plot_data/total_plots.csv")%>%
mutate(
landform = as.factor(landform),
plots = as.factor(plots),
rainfall = factor(rainfall, levels = c("moderate", "lower" , "high")))
summary(total_plots)
#calculate basal area
basal_area <- total_plots %>%
gather("d_10", "diamiter", starts_with ("d_"))%>%
mutate(basal_area = (diamiter*0.5)^2*3.14159265359)%>%
arrange(tree)%>%
filter(!is.na(diamiter))
# using the accacia allometric equation from feller 1980 we will calculate biomass for each tree based on a "stem by stem" analysis.
# see "Review of Allometric Relationships for Estimating Woody Biomass for New South Wales, the Australian Capital Territory, Victoria, Tasmania and South Australia" (page 36)
D2H_model <- basal_area %>%
mutate(
dbh = (diamiter*0.798)-0.577,
stem_log_biomass = log(1.9+ 424.9 * (dbh/100)^2 * (height/100)),
stem_biomass = exp(stem_log_biomass),
branch_log_biomass = log(208) + log((dbh/100)^2 * (height/100)),
branch_biomass = exp(branch_log_biomass),
leave_log_biomass = log(8) + log((dbh/100)^2 * (height/100)),
leave_biomass = exp(leave_log_biomass))%>%
group_by(tree, height, landform, plots, rainfall, subplot, sub_plot_area, subplot_density, plot_density)%>%
summarise(trunk_log_biomass = sum(stem_log_biomass),
trunk_biomass = sum(stem_biomass),
lim_log_biomass = sum(branch_log_biomass),
lim_biomass = sum(branch_biomass),
phylode_log_biomass = sum(leave_log_biomass),
phylode_biomass = sum(leave_biomass),
diamiter = sum(dbh),
basal_area = sum(basal_area),
.groups = "drop")%>%
mutate(
biomass = trunk_biomass + lim_biomass + phylode_biomass,
log_biomass = log(biomass))
#d2h plot level biomass
plot_D2h <- D2H_model%>%
aggregate(biomass ~ subplot + landform + sub_plot_area + plots + rainfall + subplot_density + plot_density, sum)%>%
mutate(
biomass.m2 = biomass/sub_plot_area,
logbiomass.m2 = log(biomass.m2),
log.sub.dens = log(subplot_density))
#plot level biomass
avereage_suplot_biomass <- D2H_model %>%
group_by(subplot)%>%
summarise(
ave.AGB = mean(biomass)) %>% ungroup()
stem_plots <- left_join(plot_D2h, avereage_suplot_biomass, by = "subplot")
summary(stem_plots)
#create frontier model.
self.thin <- sfa(log(ave.AGB) ~ log.sub.dens*rainfall/landform, data = stem_plots)
#create frontier model.
self.thin <- sfa(log(ave.AGB) ~ log.sub.dens*rainfall/landform, data = stem_plots)
total_plots <- read_csv("plot_data/total_plots.csv")%>%
mutate(
landform = as.factor(landform),
plots = as.factor(plots),
rainfall = factor(rainfall, levels = c("moderate", "lower" , "high")))
summary(total_plots)
#calculate basal area
basal_area <- total_plots %>%
gather("d_10", "diamiter", starts_with ("d_"))%>%
mutate(basal_area = (diamiter*0.5)^2*3.14159265359)%>%
arrange(tree)%>%
filter(!is.na(diamiter))
# using the accacia allometric equation from feller 1980 we will calculate biomass for each tree based on a "stem by stem" analysis.
# see "Review of Allometric Relationships for Estimating Woody Biomass for New South Wales, the Australian Capital Territory, Victoria, Tasmania and South Australia" (page 36)
D2H_model <- basal_area %>%
mutate(
dbh = (diamiter*0.798)-0.577,
stem_log_biomass = log(1.9+ 424.9 * (dbh/100)^2 * (height/100)),
stem_biomass = exp(stem_log_biomass),
branch_log_biomass = log(208) + log((dbh/100)^2 * (height/100)),
branch_biomass = exp(branch_log_biomass),
leave_log_biomass = log(8) + log((dbh/100)^2 * (height/100)),
leave_biomass = exp(leave_log_biomass))%>%
group_by(tree, height, landform, plots, rainfall, subplot, sub_plot_area, subplot_density, plot_density)%>%
summarise(trunk_log_biomass = sum(stem_log_biomass),
trunk_biomass = sum(stem_biomass),
lim_log_biomass = sum(branch_log_biomass),
lim_biomass = sum(branch_biomass),
phylode_log_biomass = sum(leave_log_biomass),
phylode_biomass = sum(leave_biomass),
diamiter = sum(dbh),
basal_area = sum(basal_area),
.groups = "drop")%>%
mutate(
biomass = trunk_biomass + lim_biomass + phylode_biomass,
log_biomass = log(biomass))
#d2h plot level biomass
plot_D2h <- D2H_model%>%
aggregate(biomass ~ subplot + landform + sub_plot_area + plots + rainfall + subplot_density + plot_density, sum)%>%
mutate(
biomass.m2 = biomass/sub_plot_area,
logbiomass.m2 = log(biomass.m2),
log.sub.dens = log(subplot_density))
#plot level biomass
avereage_suplot_biomass <- D2H_model %>%
group_by(subplot)%>%
summarise(
ave.AGB = mean(biomass)) %>% ungroup()
stem_plots <- left_join(plot_D2h, avereage_suplot_biomass, by = "subplot")
summary(stem_plots)
#create frontier model.
self.thin <- sfa(log(ave.AGB) ~ log.sub.dens*rainfall/landform, data = stem_plots)
