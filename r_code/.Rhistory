subplot = as.factor(subplot),
rainfall = factor(rainfall, levels = c("low", "moderate" , "high")))
total_plots <- read_csv("input_data/plot_data/plot_data/total_plots.csv")%>%
mutate(
landform = as.factor(landform),
plots = as.factor(plots),
subplot = as.factor(subplot),
rainfall = factor(rainfall, levels = c("low", "moderate" , "high")))
total_plots <- read_csv("/input_data/plot_data/plot_data/total_plots.csv")%>%
mutate(
landform = as.factor(landform),
plots = as.factor(plots),
subplot = as.factor(subplot),
rainfall = factor(rainfall, levels = c("low", "moderate" , "high")))
total_plots <- read_csv("input_data/plot_data/plot_data/total_plots.csv")%>%
mutate(
landform = as.factor(landform),
plots = as.factor(plots),
subplot = as.factor(subplot),
rainfall = factor(rainfall, levels = c("low", "moderate" , "high")))
total_plots <- read_csv("input_data/plot_data/total_plots.csv")%>%
mutate(
landform = as.factor(landform),
plots = as.factor(plots),
subplot = as.factor(subplot),
rainfall = factor(rainfall, levels = c("low", "moderate" , "high")))
summary(total_plots)
total_wood <- read_csv("~/Thesis/r_studio/trait_data/wood/total_wood.csv")%>%
mutate( rainfall = factor(rainfall, levels = c("low", "moderate", "high")))
summary(total_wood)
#calculate basal area
basal_area <- total_plots %>%
gather("d_10", "diamiter", starts_with ("d_"))%>%
mutate(basal_area = (diamiter*0.5)^2*3.14159265359)%>%
arrange(tree)%>%
filter(!is.na(diamiter))
#log allometric variables
logbasal <- basal_area%>%
mutate(log.height = log(height),
log.basal = log(basal_area))
mean(logbasal$log.height)
mean(logbasal$log.basal)
# using the accacia allometric equation from feller 1980 we will calculate biomass for each tree based on a "stem by stem" analysis.
# see "Review of Allometric Relationships for Estimating Woody Biomass for New South Wales, the Australian Capital Territory, Victoria, Tasmania and South Australia" (page 36)
D2H_model <- logbasal %>%
group_by(tree, log.height, height, log.basal, landform, plots, rainfall, subplot, sub_plot_area, subplot_density, plot_density)%>%
summarise(basal_area = sum(basal_area),.groups = "drop")%>%
mutate(diamiter = (sqrt(basal_area/3.14159265359))*2,
mc.height = log.height-5.971321,
mc.basal = log.basal-3.38895)
mean(D2H_model$mc.height)
mean(D2H_model$mc.basal)
#filter out smaller trees due to allometeric differences in juveniles
f.D2H_model <- filter(D2H_model, diamiter > 2)
f.h.D2H_model <- filter(f.D2H_model, height > 40)
allometry_total <- read_csv("allometry/allometry_total.csv")%>%
mutate(
landform = as.factor(landform),
rainfall = factor(rainfall, levels = c( "low", "moderate", "high")))
allometry_total <- read_csv("input_data/allometry/allometry_total.csv")%>%
mutate(
landform = as.factor(landform),
rainfall = factor(rainfall, levels = c( "low", "moderate", "high")))
summary(allometry_total)
#calcualte basal area
allo_basal <- allometry_total %>%
gather("d10", "diamiter", starts_with ("d10"))%>%
mutate(basal_area = (diamiter*0.5)^2*3.14159265359)%>%
arrange(tree)%>%
filter(!is.na(diamiter))
canopy_volume <- allo_basal%>%
group_by(tree, canopy_1, canopy_2, `95_Canopy`, tree_height, landform, rainfall)%>%
summarise(basal_area = sum(basal_area),.groups = "drop")%>%
mutate(canopy_height = ((tree_height - `95_Canopy`)/2),  # divide by 2 to get the semi-axis
canopy_length = canopy_1/2,
canopy_bredth = canopy_2/2,
canopy_vol= (3/4 * 3.141593 * canopy_height *canopy_bredth * canopy_length)/1000000,# volume of an ellipsoid. Divide by 1,000,000 to get m3
log.tree.H = log(tree_height),
log.canopy.V = log(canopy_vol),
log.basal_area = log(basal_area),
cent.log.h = log.tree.H - 1.641818,
cent.log.b = log.basal_area -4.924167,
#grand mean center allometric variables
mc.tree_height = log.tree.H -  6.246988,
mc.basal_area = log.basal_area -  4.924167,
mc.cv = log.canopy.V - 2.174772)%>%
filter(!is.na(canopy_vol))%>%
filter(!is.na(log.canopy.V))
mean(canopy_volume$log.tree.H)
mean(canopy_volume$log.basal_area)
mean(canopy_volume$log.canopy.V)
mean(canopy_volume$mc.tree_height)
mean(canopy_volume$mc.basal_area)
mean(canopy_volume$mc.cv)
summary(canopy_volume)
#functions for BA Vs H
sma.H.BA.FUN.L <- function(x) {87.55858 * x^0.2931996}
sma.H.BA.FUN.M <- function(x) {88.96526 * x ^0.3480308 }
sma.H.BA.FUN.H <- function(x) {148.9559 * x^0.3720465}
sma.basal.vs.heigh_plots <- f.D2H_model%>%
ggplot(aes(basal_area, height, colour = rainfall))+
geom_point(aes())+
geom_function(fun = sma.H.BA.FUN.L, n = 105, colour = "coral2", size = 1)+
geom_function(fun = sma.H.BA.FUN.M, n = 105, colour = "forestgreen", size = 1)+
geom_function(fun = sma.H.BA.FUN.H, n = 105, colour =  "deepskyblue3 ", size = 1)+
ylab("height (cm)")+
xlab(bquote("basal area "(cm^2)))+
ggtitle("A")+
theme_cowplot()+
xlim(0, 1200)+
theme(axis.title=element_text(size=12), legend.position = "none")
print(sma.basal.vs.heigh_plots)
ggsave("ouputs/tree_sturcture/sma.basal.vs.heigh_plots.png")
#Plant vessel's Data
#build data set
vessels <- read_csv("input_data/trait_data/vessel.csv")%>%
mutate(rainfalllow = ifelse (grepl ("STURT", name), "low", "moderate"),
rainfallhigh = ifelse (grepl ("GUNDA", name), "high", "moderate"),
landform = ifelse (grepl ("SHED", name), "shed", "acc"),
rainfall = ifelse(rainfalllow == "low", "low",
ifelse(rainfallhigh == "high", "high", "moderate")),
rainfall = as.factor(rainfall),
landform = as.factor(landform),
length = as.numeric(length),
width = as.numeric(width),
rainfall = factor(rainfall, levels = c("low", "moderate", "high")))%>%
#extract tree as a grouping factor from the name variable
mutate(
tree = substr(name, start = 1, stop = 13))%>%
#get log transformations of various variables
mutate(log.roundness = log(roundess),
log.area = log(area))
f.vessels <- vessels%>%
filter(, l_ratio > 0.20)%>%
filter(, roundess > 0.15)%>%
filter(, area < 3000)%>%
filter(, area > 60)%>%
filter(, width > 3)%>%
#turn point values into area (pixel spacial resolution 1.17um across images on average with small variance (total range = 0.014um))
mutate(area = 1.17*area,
length = 1.17*length,
width = 1.17*width,
perimeter = 1.17*perimeter)
summary(vessels)
#leaf data
total_leaves <- read_csv("input_data/trait_data/leaves/total_leaves.csv")%>%
mutate( rainfall = factor(rainfall, levels = c("low", "moderate", "high")))
summary(total_leaves)
# Wood density data
total_wood <- read_csv("input_data/wood/total_wood.csv")%>%
mutate( rainfall = factor(rainfall, levels = c("low", "moderate", "high")))
# Wood density data
total_wood <- read_csv("input_data/trait_data/wood/total_wood.csv")%>%
mutate( rainfall = factor(rainfall, levels = c("low", "moderate", "high")))
summary(total_wood)
wood_data <- total_wood%>%
mutate(
basal_area = (wood_thickness*0.5)^2*3.14159265359,
volume = basal_area * wood_length,
wood.dens = wood_mass/volume)
summary(wood_data)
lmem.roundness <- lmer(log.roundness ~ rainfall  + (1|tree), data = f.vessels)
summary(lmem.roundness)
## coefficent of variance
confint(lmem.roundness)
## low rainfall estimates and CI roundness
exp(-1.0185754)
exp(-0.8230986)
exp(-0.92086)
# high rinfall estimates and CI roundenss
exp(-1.0185754 -0.1319110)
exp(-0.8230986  + 0.2168832)
exp(-0.92086 + 0.04248)
lmem.roundness <- lmer(log.roundness ~ rainfall  + (1|tree), data = f.vessels)
summary(lmem.roundness)
vessel.roundness <- ggplot( f.vessels, aes(rainfall, roundess, fill = rainfall))+
geom_boxplot()+
theme_cowplot()+
ggtitle("a")+
ylab ("xylem roundness")+
xlab("rainfall site")+
theme(legend.position = "none")
print(vessel.roundness)
ggsave("outputs/trait/vessel.roundness")
vessel.roundness <- ggplot( f.vessels, aes(rainfall, roundess, fill = rainfall))+
geom_boxplot()+
theme_cowplot()+
ggtitle("a")+
ylab ("xylem roundness")+
xlab("rainfall site")+
theme(legend.position = "none")
print(vessel.roundness)
ggsave("ouputs/trait/vessel.roundness")
vessel.roundness <- ggplot( f.vessels, aes(rainfall, roundess, fill = rainfall))+
geom_boxplot()+
theme_cowplot()+
ggtitle("a")+
ylab ("xylem roundness")+
xlab("rainfall site")+
theme(legend.position = "none")
print(vessel.roundness)
ggsave("ouputs/trait/vessel.roundness.png")
# traits/organs
plot_grid(vessel.roundness, xylem_area, wood.density, d.massvsarea, leaf.area, nrows =3, ncol=2, rel_widths = c(1,1))
low_high <- f.D2H_model%>%
filter(rainfall == "moderate")
View(low_high)
low_high <- f.D2H_model%>%
filter(rainfall != "moderate")
low_moderate <- f.D2H_model%>%
filter(rainfall != "high")
moderate_high <- f.D2H_model%>%
filter(rainfall != "low")
View(low_moderate)
# using the accacia allometric equation from feller 1980 we will calculate biomass for each tree based on a "stem by stem" analysis.
# see "Review of Allometric Relationships for Estimating Woody Biomass for New South Wales, the Australian Capital Territory, Victoria, Tasmania and South Australia" (page 36)
D2H_model <- logbasal %>%
group_by(tree, log.height, height, log.basal, landform, plots, rainfall, subplot, sub_plot_area, subplot_density, plot_density)%>%
summarise(basal_area = sum(basal_area),.groups = "drop")%>%
mutate(diamiter = (sqrt(basal_area/3.14159265359))*2,
mc.height = log.height-5.971321,
mc.basal = log.basal-3.38895)
mean(D2H_model$mc.height)
mean(D2H_model$mc.basal)
#filter out smaller trees due to allometeric differences in juveniles
f.D2H_model <- filter(D2H_model, diamiter > 2)
f.h.D2H_model <- filter(f.D2H_model, height > 40)
low_high <- f.D2H_model%>%
filter(rainfall != "moderate")
low_moderate <- f.D2H_model%>%
filter(rainfall != "high")
moderate_high <- f.D2H_model%>%
filter(rainfall != "low")
allometry_total <- read_csv("input_data/allometry/allometry_total.csv")%>%
mutate(
landform = as.factor(landform),
rainfall = factor(rainfall, levels = c( "low", "moderate", "high")))
summary(allometry_total)
#calcualte basal area
allo_basal <- allometry_total %>%
gather("d10", "diamiter", starts_with ("d10"))%>%
mutate(basal_area = (diamiter*0.5)^2*3.14159265359)%>%
arrange(tree)%>%
filter(!is.na(diamiter))
canopy_volume <- allo_basal%>%
group_by(tree, canopy_1, canopy_2, `95_Canopy`, tree_height, landform, rainfall)%>%
summarise(basal_area = sum(basal_area),.groups = "drop")%>%
mutate(canopy_height = ((tree_height - `95_Canopy`)/2),  # divide by 2 to get the semi-axis
canopy_length = canopy_1/2,
canopy_bredth = canopy_2/2,
canopy_vol= (3/4 * 3.141593 * canopy_height *canopy_bredth * canopy_length)/1000000,# volume of an ellipsoid. Divide by 1,000,000 to get m3
log.tree.H = log(tree_height),
log.canopy.V = log(canopy_vol),
log.basal_area = log(basal_area),
cent.log.h = log.tree.H - 1.641818,
cent.log.b = log.basal_area -4.924167,
#grand mean center allometric variables
mc.tree_height = log.tree.H -  6.246988,
mc.basal_area = log.basal_area -  4.924167,
mc.cv = log.canopy.V - 2.174772)%>%
filter(!is.na(canopy_vol))%>%
filter(!is.na(log.canopy.V))
mean(canopy_volume$log.tree.H)
mean(canopy_volume$log.basal_area)
mean(canopy_volume$log.canopy.V)
mean(canopy_volume$mc.tree_height)
mean(canopy_volume$mc.basal_area)
mean(canopy_volume$mc.cv)
summary(canopy_volume)
low_high_cv <- canopy_volume %>%
filter(rainfall != "moderate")
low_mod <- canopy_volume %>%
filter(rainfall != "high")
moderat_high <- canopy_volume %>%
filter(rainfall != "low")
low_high_cv <- canopy_volume %>%
filter(rainfall != "moderate")
low_mod_cv<- canopy_volume %>%
filter(rainfall != "high")
moderat_high_cv <- canopy_volume %>%
filter(rainfall != "low")
low_high <- f.D2H_model%>%
filter(rainfall != "moderate")
low_moderate <- f.D2H_model%>%
filter(rainfall != "high")
moderate_high <- f.D2H_model%>%
filter(rainfall != "low")
sma.ba_h.test <- sma(height ~ basal_area * rainfall,  log="xy", data = f.D2H_model)
sma.ba_h.test
summary(sma.ba_h.test)
#recalculate p-crit based on bonferoni correction
0.05/3
sma.ba_h.test <- sma(height ~ basal_area * rainfall,  log="xy", data = low_mod)
View(low_mod)
View(low_moderate)
sma.ba_h.test <- sma(height ~ basal_area * rainfall,  log="xy", data = low_moderate)
pair_bh_lowmod <- sma(height ~ basal_area * rainfall,  log="xy", data = low_moderate)
summary(pair_bh_lowmod)
View(low_moderate)
pair_bh_lowmod <- sma(height ~ basal_area * rainfall,  log="xy", data = low_moderate)
pair_bh_lowmod
View(low_mod)
pair_bh_low_high <- sma(height ~ basal_area * rainfall,  log="xy", data = low_high)
pair_bh_low_high <- sma(height ~ basal_area * rainfall,  log="xy", data = low_high)
pair_bh_low_high
pair_bh_mod_high <- sma(height ~ basal_area * rainfall,  log="xy", data = moderat_high)
View(moderat_high)
View(moderat_high_cv)
low_high <- f.D2H_model%>%
filter(rainfall != "moderate")
low_mod <- f.D2H_model%>%
filter(rainfall != "high")
mod_high <- f.D2H_model%>%
filter(rainfall != "low")
low_high_cv <- canopy_volume %>%
filter(rainfall != "moderate")
low_mod_cv<- canopy_volume %>%
filter(rainfall != "high")
mod_high_cv <- canopy_volume %>%
filter(rainfall != "low")
pair_bh_mod_high <- sma(height ~ basal_area * rainfall,  log="xy", data = mod_high)
pair_bh_mod_high
View(f.D2H_model)
sma.int.CV_BA<- with(f.D2H_model, elev.com(mc.basal, mc.height, rainfall))
sma.int.CV_BA
sma.int.ba_h<- with(f.D2H_model, elev.com(mc.basal, mc.height, rainfall))
sma.int.ba_h
exp(0.375439124 ) #low elevation
exp(0.004579648) #mod elevation
exp( -0.843353960) #high elevation
#functions for BA Vs H
sma.H.BA.FUN.L <- function(x) {1.45563 * x^0.2931996}
sma.H.BA.FUN.M <- function(x) {1.00459 * x ^0.3480308 }
sma.H.BA.FUN.H <- function(x) {0.430265 * x^0.3720465}
sma.int.ba_h<- with(f.D2H_model, elev.com(log(mc.basal), log(mc.height), rainfall))
sma.int.ba_h
exp(1.8126194) #low elevation
exp(1.6573243) #mod elevation
exp( 0.7518105) #high elevation
#functions for BA Vs H
sma.H.BA.FUN.L <- function(x) {6.126474 * x^0.2931996}
sma.H.BA.FUN.M <- function(x) {5.245257 * x ^0.3480308 }
sma.H.BA.FUN.H <- function(x) {2.120836 * x^0.3720465}
sma.basal.vs.heigh_plots <- f.D2H_model%>%
ggplot(aes(mc.basal, mc.height, colour = rainfall))+
geom_point(aes())+
geom_function(fun = sma.H.BA.FUN.L, n = 105, colour = "coral2", size = 1)+
geom_function(fun = sma.H.BA.FUN.M, n = 105, colour = "forestgreen", size = 1)+
geom_function(fun = sma.H.BA.FUN.H, n = 105, colour =  "deepskyblue3 ", size = 1)+
ylab("height (cm)")+
xlab(bquote("basal area "(cm^2)))+
ggtitle("A")+
theme_cowplot()+
xlim(0, 1200)+
theme(axis.title=element_text(size=12), legend.position = "none")
print(sma.basal.vs.heigh_plots)
ggsave("ouputs/tree_sturcture/sma.basal.vs.heigh_plots.png")
#functions for BA Vs H
sma.H.BA.FUN.L <- function(x) {6.126474 * x^0.3025323}
sma.H.BA.FUN.M <- function(x) {5.245257 * x ^0.2139099 }
sma.H.BA.FUN.H <- function(x) {2.120836 * x^0.3594004}
sma.basal.vs.heigh_plots <- f.D2H_model%>%
ggplot(aes(mc.basal, mc.height, colour = rainfall))+
geom_point(aes())+
geom_function(fun = sma.H.BA.FUN.L, n = 105, colour = "coral2", size = 1)+
geom_function(fun = sma.H.BA.FUN.M, n = 105, colour = "forestgreen", size = 1)+
geom_function(fun = sma.H.BA.FUN.H, n = 105, colour =  "deepskyblue3 ", size = 1)+
ylab("height (cm)")+
xlab(bquote("basal area "(cm^2)))+
ggtitle("A")+
theme_cowplot()+
xlim(0, 1200)+
theme(axis.title=element_text(size=12), legend.position = "none")
print(sma.basal.vs.heigh_plots)
ggsave("ouputs/tree_sturcture/sma.basal.vs.heigh_plots.png")
sma.basal.vs.heigh_plots <- f.D2H_model%>%
ggplot(aes(log(mc.basal), log(mc.height), colour = rainfall))+
geom_point(aes())+
geom_function(fun = sma.H.BA.FUN.L, n = 105, colour = "coral2", size = 1)+
geom_function(fun = sma.H.BA.FUN.M, n = 105, colour = "forestgreen", size = 1)+
geom_function(fun = sma.H.BA.FUN.H, n = 105, colour =  "deepskyblue3 ", size = 1)+
ylab("height (cm)")+
xlab(bquote("basal area "(cm^2)))+
ggtitle("A")+
theme_cowplot()+
xlim(0, 1200)+
theme(axis.title=element_text(size=12), legend.position = "none")
print(sma.basal.vs.heigh_plots)
ggsave("ouputs/tree_sturcture/sma.basal.vs.heigh_plots.png")
sma.basal.vs.heigh_plots <- f.D2H_model%>%
ggplot(aes(lmc.basal, mc.height, colour = rainfall))+
geom_point(aes())+
geom_function(fun = sma.H.BA.FUN.L, n = 105, colour = "coral2", size = 1)+
geom_function(fun = sma.H.BA.FUN.M, n = 105, colour = "forestgreen", size = 1)+
geom_function(fun = sma.H.BA.FUN.H, n = 105, colour =  "deepskyblue3 ", size = 1)+
ylab("height (cm)")+
xlab(bquote("basal area "(cm^2)))+
ggtitle("A")+
theme_cowplot()+
xlim(0, 1200)+
theme(axis.title=element_text(size=12), legend.position = "none")
print(sma.basal.vs.heigh_plots)
sma.basal.vs.heigh_plots <- f.D2H_model%>%
ggplot(aes(mc.basal, mc.height, colour = rainfall))+
geom_point(aes())+
geom_function(fun = sma.H.BA.FUN.L, n = 105, colour = "coral2", size = 1)+
geom_function(fun = sma.H.BA.FUN.M, n = 105, colour = "forestgreen", size = 1)+
geom_function(fun = sma.H.BA.FUN.H, n = 105, colour =  "deepskyblue3 ", size = 1)+
ylab("height (cm)")+
xlab(bquote("basal area "(cm^2)))+
ggtitle("A")+
theme_cowplot()+
xlim(0, 1200)+
theme(axis.title=element_text(size=12), legend.position = "none")
print(sma.basal.vs.heigh_plots)
ggsave("ouputs/tree_sturcture/sma.basal.vs.heigh_plots.png")
#functions for BA Vs H
sma.H.BA.FUN.L <- function(x) {60.126474 * x^0.3025323}
sma.H.BA.FUN.M <- function(x) {50.245257 * x ^0.2139099 }
sma.H.BA.FUN.H <- function(x) {20.120836 * x^0.3594004}
sma.basal.vs.heigh_plots <- f.D2H_model%>%
ggplot(aes(mc.basal, mc.height, colour = rainfall))+
geom_point(aes())+
geom_function(fun = sma.H.BA.FUN.L, n = 105, colour = "coral2", size = 1)+
geom_function(fun = sma.H.BA.FUN.M, n = 105, colour = "forestgreen", size = 1)+
geom_function(fun = sma.H.BA.FUN.H, n = 105, colour =  "deepskyblue3 ", size = 1)+
ylab("height (cm)")+
xlab(bquote("basal area "(cm^2)))+
ggtitle("A")+
theme_cowplot()+
xlim(0, 1200)+
theme(axis.title=element_text(size=12), legend.position = "none")
print(sma.basal.vs.heigh_plots)
ggsave("ouputs/tree_sturcture/sma.basal.vs.heigh_plots.png")
#functions for BA Vs H
sma.H.BA.FUN.L <- function(x) {1.8126194 * x^0.3025323}
sma.H.BA.FUN.M <- function(x) {1.6573243 * x ^0.2139099 }
sma.H.BA.FUN.H <- function(x) {0.7518105 * x^0.3594004}
sma.basal.vs.heigh_plots <- f.D2H_model%>%
ggplot(aes(mc.basal, mc.height, colour = rainfall))+
geom_point(aes())+
geom_function(fun = sma.H.BA.FUN.L, n = 105, colour = "coral2", size = 1)+
geom_function(fun = sma.H.BA.FUN.M, n = 105, colour = "forestgreen", size = 1)+
geom_function(fun = sma.H.BA.FUN.H, n = 105, colour =  "deepskyblue3 ", size = 1)+
ylab("height (cm)")+
xlab(bquote("basal area "(cm^2)))+
ggtitle("A")+
theme_cowplot()+
xlim(0, 1200)+
theme(axis.title=element_text(size=12), legend.position = "none")
print(sma.basal.vs.heigh_plots)
ggsave("ouputs/tree_sturcture/sma.basal.vs.heigh_plots.png")
#functions for BA Vs H
sma.H.BA.FUN.L <- function(x) {0.18126194 * x^0.3025323}
sma.H.BA.FUN.M <- function(x) {0.16573243 * x ^0.2139099 }
sma.H.BA.FUN.H <- function(x) {0.07518105 * x^0.3594004}
sma.basal.vs.heigh_plots <- f.D2H_model%>%
ggplot(aes(mc.basal, mc.height, colour = rainfall))+
geom_point(aes())+
geom_function(fun = sma.H.BA.FUN.L, n = 105, colour = "coral2", size = 1)+
geom_function(fun = sma.H.BA.FUN.M, n = 105, colour = "forestgreen", size = 1)+
geom_function(fun = sma.H.BA.FUN.H, n = 105, colour =  "deepskyblue3 ", size = 1)+
ylab("height (cm)")+
xlab(bquote("basal area "(cm^2)))+
ggtitle("A")+
theme_cowplot()+
xlim(0, 1200)+
theme(axis.title=element_text(size=12), legend.position = "none")
print(sma.basal.vs.heigh_plots)
ggsave("ouputs/tree_sturcture/sma.basal.vs.heigh_plots.png")
#functions for BA Vs H
sma.H.BA.FUN.L <- function(x) {6.126474 * x^0.3025323}
sma.H.BA.FUN.M <- function(x) {5.245257 * x ^0.2139099 }
sma.H.BA.FUN.H <- function(x) {2.120836 * x^0.3594004}
sma.basal.vs.heigh_plots <- f.D2H_model%>%
ggplot(aes(basal_area, height, colour = rainfall))+
geom_point(aes())+
geom_function(fun = sma.H.BA.FUN.L, n = 105, colour = "coral2", size = 1)+
geom_function(fun = sma.H.BA.FUN.M, n = 105, colour = "forestgreen", size = 1)+
geom_function(fun = sma.H.BA.FUN.H, n = 105, colour =  "deepskyblue3 ", size = 1)+
ylab("height (cm)")+
xlab(bquote("basal area "(cm^2)))+
ggtitle("A")+
theme_cowplot()+
xlim(0, 1200)+
theme(axis.title=element_text(size=12), legend.position = "none")
print(sma.basal.vs.heigh_plots)
ggsave("ouputs/tree_sturcture/sma.basal.vs.heigh_plots.png")
sma.ba_CV.test <- sma(canopy_vol ~ basal_area * rainfall,  log="xy", data=canopy_volume)
sma.ba_CV.test
summary(sma.ba_h.test)
View(canopy_volume)
sma.ba_CV.test <- sma(canopy_vol ~ basal_area * rainfall,  log="xy", data=canopy_volume)
sma.ba_CV.test
summary(sma.ba_h.test)
sma.int.CV_BA<- with(canopy_volume, elev.com(mc.cv, mc.basal_area, rainfall))
sma.int.CV_BA
sma.CV.BA <- canopy_volume%>%
ggplot(aes(exp(mc.basal_area), exp(mc.cv), colour = rainfall))+
geom_point()+
geom_function(fun = CV.BA.FUN.L, n = 105, colour = "coral2", size = 1)+
geom_function(fun = CV.BA.FUN.M, n = 105, colour = "forestgreen", size = 1)+
geom_function(fun = CV.BA.FUN.H, n = 105, colour =  "deepskyblue3 ", size = 1)+
ylab(bquote("canopy volume " (m^3)))+
xlab(bquote("basal area "(cm^2)))+
ggtitle("B")+
theme_cowplot()+
theme(axis.title=element_text(size=12), legend.position = "none")
# define Canopy area to height area function from above ANCOVA
CV.BA.FUN.L <- function(x) {0.8869829 * x^1.177229}
CV.BA.FUN.M <- function(x) {0.8823188 * x ^1.388406 }
CV.BA.FUN.H <- function(x) {1.221434 * x^1.343042}
