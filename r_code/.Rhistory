# Compare the models using likelihood ratio test (LRT)
anova(lmem.roundness, beta.glmm.roundness, test = "LRT")
# Print the results
AIC(beta.glmm.roundness, lmem.roundness)
## compare gamma regrassion to linear regression
anova(final.tree.height.lm, height.GLMM.gamma, test = "LRT")
AIC(height.GLMM.gamma)
AIC(height.GLMM.gamma)
height.GLMM.gamma <- glmmTMB(height ~ rainfall + (1|plots), data = f.D2H_model,family = Gamma(link = "log"))
summary(height.GLMM.gamma)
lmem.roundness <- lmer(log.roundness ~ rainfall + (1|tree), data = f.vessels)
beta.glmm.roundness <- glmmTMB(roundess ~ rainfall + (1|tree), data = f.vessels, family = beta_family())
# Compare the models using likelihood ratio test (LRT)
anova(lmem.roundness, beta.glmm.roundness, test = "LRT")
# Print the results
AIC(beta.glmm.roundness, lmem.roundness)
qqnorm(residuals(final.tree.height.lm), pch = 1, frame = FALSE)
qqline(residuals(final.tree.height.lm), col = "steelblue", lwd = 2)
# Compare the models using likelihood ratio test (LRT)
anova(final.tree.height.lm, height.GLMM.gamma, test = "LRT")
# Print the results
AIC(height.GLMM.gamma, final.tree.height.lm)
final.tree.height.lm <- lmer(log(height) ~  rainfall + (1|landform/plots/subplot), data = f.D2H_model, REML = T)
final.tree.height.null <- lmer(log(height) ~ (1|landform/plots/subplot), data = f.D2H_model, REML = T)
anova(final.tree.height.null, final.tree.height.lm, test = "LRT")
final.tree.height.lm <- lmer(log(height) ~  rainfall + (1|plots/subplot), data = f.D2H_model, REML = T)
final.tree.height.null <- lmer(log(height) ~ (1|plots/subplot), data = f.D2H_model, REML = T)
anova(final.tree.height.null, final.tree.height.lm, test = "LRT")
final.tree.height.lm <- lmer(log(height) ~  rainfall + (1|landform/plots/subplot), data = f.D2H_model, REML = T)
final.tree.height.null <- lmer(log(height) ~ (1|landform/plots/subplot), data = f.D2H_model, REML = T)
anova(final.tree.height.null, final.tree.height.lm, test = "LRT")
BIC(height.GLMM.gamma, final.tree.height.lm)
DIC(height.GLMM.gamma, final.tree.height.lm)
AIC(height.GLMM.gamma, final.tree.height.lm)
ggplot(f.D2H_model, aes(height, colour = rainfall)) +
geom_histogram()
height.GLMM.gamma <- glmmTMB(height ~ rainfall + (1|plots), data = f.D2H_model,family = Gamma(link = "log"))
summary(height.GLMM.gamma)
gamma.height.SimRes <- simulateResiduals(fittedModel  = height.GLMM.gamma)
plot(gamma.height.SimRes)
lmem.roundness <- lmer(log.roundness ~ rainfall + (1|landform/tree), data = f.vessels)
beta.glmm.roundness <- glmmTMB(roundess ~ rainfall + (1|landform/tree), data = f.vessels, family = beta_family())
# Compare the models using likelihood ratio test (LRT)
anova(lmem.roundness, beta.glmm.roundness, test = "LRT")
height.GLMM.gamma <- glmmTMB(height ~ rainfall + (1|plots), data = f.D2H_model,family = Gamma(link = "log"))
summary(height.GLMM.gamma)
gamma.height.SimRes <- simulateResiduals(fittedModel  = height.GLMM.gamma)
plot(gamma.height.SimRes)
heightvsrainfall <- f.D2H_model%>%
ggplot( aes( rainfall, height, fill = rainfall))+
geom_boxplot(notch = F)+
scale_y_log10()+
ylab("height (cm)")+
xlab(" ")+
ggtitle("e")+
theme_cowplot()+
theme(legend.position = "none")
print(heightvsrainfall)
height.GLMM.gamma <- glmmTMB(height ~ rainfall + (1|plots), data = f.D2H_model,family = Gamma(link = "log"))
height.GLMM.gamma.null <- glmmTMB(height ~  (1|plots), data = f.D2H_model,family = Gamma(link = "log"))
anova(height.GLMM.gamma.null, height.GLMM.gamma, test = "LRT")
height.GLMM.gamma <- glmmTMB(height ~ rainfall + (1|plots), data = f.D2H_model,family = Gamma(link = "log"))
height.GLMM.gamma.null <- glmmTMB(height ~  (1|plots), data = f.D2H_model,family = Gamma(link = "log"))
anova(height.GLMM.gamma.null, height.GLMM.gamma, test = "Chisq")
beta.glmm.roundness <- glmmTMB(roundess ~ rainfall + (1|landform/tree), data = f.vessels,family = beta_family())
beta.glmm.roundness.null <- glmmTMB(roundess ~ (1|landform/tree), data = f.vessels,family = beta_family())
anova(beta.glmm.roundness, beta.glmm.roundness.null, test = "chisq")
beta.glmm.roundness <- glmmTMB(roundess ~ rainfall + (1|landform/tree), data = f.vessels,family = beta_family())
beta.glmm.roundness.null <- glmmTMB(roundess ~ (1|landform/tree), data = f.vessels,family = beta_family())
anova(beta.glmm.roundness, beta.glmm.roundness.null, test = "LRT")
beta.glmm.roundness <- glmmTMB(roundess ~ rainfall + (1|landform/tree), data = f.vessels,family = beta_family())
beta.glmm.roundness.null <- glmmTMB(roundess ~ (1|landform/tree), data = f.vessels,family = beta_family())
anova(beta.glmm.roundness, beta.glmm.roundness.null, test = "CHia")
beta.glmm.roundness <- glmmTMB(roundess ~ rainfall + (1|landform/tree), data = f.vessels,family = beta_family())
beta.glmm.roundness.null <- glmmTMB(roundess ~ (1|landform/tree), data = f.vessels,family = beta_family())
anova(beta.glmm.roundness, beta.glmm.roundness.null, test = "chisq")
heightvsrainfall <- f.D2H_model%>%
ggplot( aes( rainfall, height, fill = rainfall))+
geom_boxplot(notch = F)+
scale_y_log10()+
ylab("height (cm)")+
xlab(" ")+
ggtitle("e")+
theme_cowplot()+
theme(legend.position = "none")
print(heightvsrainfall)
pairs(emmeans(height.GLMM.gamma, ~ rainfall))
#compare main effects to interactive model
final.plot.height.fit <- lmer(log(height.m2) ~ rainfall + (1|landform/plots), data = plot_D2h, REML = T)
#create subplot level statistics
plot_D2h <- D2H_model%>%
group_by( subplot )%>%
summarise(
sub_plot_area = mean(sub_plot_area),
subplot_density = mean(subplot_density),
ave.basal = mean(basal_area),
diameter = mean(diamiter),
ave.height = mean(height),
tot.basal = sum(basal_area),
tot.height = sum(height),
stem_area = mean(3.1415/4*diamiter^2),
basal.m2 = tot.basal/sub_plot_area,
height.m2 = tot.height/sub_plot_area,
plots = first(plots),
plot_density = mean(plot_density),
rainfall = first(rainfall),
landform = first(landform))%>%
ungroup()%>%
mutate(
logbasal.m2 = log(basal.m2),
log.sub.dens = log(subplot_density))
summary(plot_D2h)
#compare main effects to interactive model
final.plot.basal.fit <- lmer(logbasal.m2 ~ rainfall + (1|landform/plots), data = plot_D2h, REML = T)
summary(final.plot.basal.fit)
qqnorm(residuals(final.plot.basal.fit), pch = 1, frame = FALSE)
qqline(residuals(final.plot.basal.fit), col = "steelblue", lwd = 2)
scatter.smooth(residuals(final.plot.basal.fit) ~ fitted(final.plot.basal.fit))
# Extract the residuals from the model
residuals <- residuals(final.plot.basal.fit)
# Perform the ACF analysis
acf(residuals)
#compare main effects to interactive model
final.plot.height.fit <- lmer(log(height.m2) ~ rainfall + (1|landform/plots), data = plot_D2h, REML = T)
summary(final.plot.height.fit)
qqnorm(residuals(final.plot.height.fit), pch = 1, frame = FALSE)
qqline(residuals(final.plot.height.fit), col = "steelblue", lwd = 2)
scatter.smooth(residuals(final.plot.height.fit) ~ fitted(final.plot.height.fit))
# Extract the residuals from the model
residuals <- residuals(final.plot.height.fit)
# Perform the ACF analysis
acf(residuals)
final.plot.height.fit <- lmer(log(height.m2) ~ rainfall +  (1|landform/plots), data = plot_D2h, REML = F)
final.plot.height.null <- lmer(log(height.m2) ~ (1|landform/plots), data = plot_D2h, REML = F)
anova(final.plot.height.null,final.plot.height.fit,test = "LRT")
#test if we need landform given we have plots as a random effect
nBoot <- 1000
lrStat <- rep(NA, nBoot)
final.plot.height.null <- lmer(log(height.m2) ~ rainfall +  (1|plots), data = plot_D2h, REML = F) #null w/o random effect
final.plot.height.fit <- lmer(log(height.m2) ~  rainfall + (1|landform/plots), data = plot_D2h, REML = F) # full model
lrObs <- 2 * logLik(final.plot.height.fit) - 2 * logLik(final.plot.height.null) # observed test stat
for (iBoot in 1:nBoot)
{
plot_D2h$logHeightSim <- unlist(simulate(final.plot.height.null)) # resampled data
bNull <- lmer(logHeightSim ~ rainfall +  (1|plots), data = plot_D2h, REML = F) # null model
bAlt <- lmer(logHeightSim ~  rainfall + (1|landform/plots), data = plot_D2h, REML = F) # full model
lrStat[iBoot] <- 2 * logLik(bAlt) - 2 * logLik(bNull) # resampled test stat
}
mean(lrStat > lrObs) # P-value for test of landform effect
heightvsrainfall <- f.D2H_model%>%
ggplot( aes( rainfall, height, fill = rainfall))+
geom_boxplot(notch = F)+
scale_y_gamma()+
ylab("height (cm)")+
xlab(" ")+
ggtitle("e")+
theme_cowplot()+
theme(legend.position = "none")
heightvsrainfall <- f.D2H_model%>%
ggplot( aes( rainfall, height, fill = rainfall))+
geom_boxplot(notch = F)+
scale_y_sqrt()+
ylab("height (cm)")+
xlab(" ")+
ggtitle("e")+
theme_cowplot()+
theme(legend.position = "none")
print(heightvsrainfall)
heightvsrainfall <- f.D2H_model%>%
ggplot( aes( rainfall, height, fill = rainfall))+
geom_boxplot(notch = F)+
scale_y_logFC()+
ylab("height (cm)")+
xlab(" ")+
ggtitle("e")+
theme_cowplot()+
theme(legend.position = "none")
print(heightvsrainfall)
heightvsrainfall <- f.D2H_model%>%
ggplot( aes( rainfall, height, fill = rainfall))+
geom_boxplot(notch = F)+
scale_y_log10()+
ylab("height (cm)")+
xlab(" ")+
ggtitle("e")+
theme_cowplot()+
theme(legend.position = "none")
print(heightvsrainfall)
# null vs fit
final.height.basal.aov <- lmer(log(height) ~ log(basal_area) * rainfall + (1|landform/plots/subplot) , data = f.D2H_model, REML = F)
final.height.null <- lmer(log(height) ~ log(basal_area) + (1|landform/plots/subplot), data = f.D2H_model, REML = F)
anova(final.height.null,final.height.basal.aov,test = "LRT")
# null vs fit
final.height.basal.aov <- lmer(log(height) ~ log(basal_area) * rainfall + (1|landform/plots/subplot) , data = f.D2H_model, REML = F)
final.height.null <- lmer(log(height) ~ log(basal_area) + (1|landform/plots/subplot), data = f.D2H_model, REML = F)
anova(final.height.null,final.height.basal.aov,test = LRT)
# null vs fit
final.height.basal.aov <- lmer(log(height) ~ log(basal_area) * rainfall + (1|landform/plots/subplot) , data = f.D2H_model, REML = F)
final.height.null <- lmer(log(height) ~ log(basal_area) + (1|landform/plots/subplot), data = f.D2H_model, REML = F)
anova(final.height.null,final.height.basal.aov,test = "LRT")
library(lme4) #mixed effect linear models
library(lmerTest)
#Plant vessel's Data
#build data set
vessels <- read_csv("trait_data/vessel.csv")%>%
mutate(rainfalllow = ifelse (grepl ("STURT", name), "low", "moderate"),
rainfallhigh = ifelse (grepl ("GUNDA", name), "high", "moderate"),
landform = ifelse (grepl ("SHED", name), "shed", "acc"),
rainfall = ifelse(rainfalllow == "low", "low",
ifelse(rainfallhigh == "high", "high", "moderate")),
rainfall = as.factor(rainfall),
landform = as.factor(landform),
length = as.numeric(length),
width = as.numeric(width),
rainfall = factor(rainfall, levels = c("low", "moderate", "high")))%>%
#extract tree as a grouping factor from the name variable
mutate(
tree = substr(name, start = 1, stop = 13))%>%
#get log transformations of various variables
mutate(log.roundness = log(roundess),
log.area = log(area))
library(tidyverse)
remove.packages("rlang")
remove.packages("rlang")
install.packages("rlang")
install.packages("rlang")
library(lme4) #mixed effect linear models
library(lmerTest)
libPaths()
.libPaths()
library(lme4) #mixed effect linear models
library(lmerTest)
library(tidyverse)
library(readr)
install.packages("remotes")
remotes::install_github("traitecoevo/bmsma")
install.packages("remotes")
summary(total_plots)
total_plots <- read_csv("plot_data/total_plots.csv")%>%
mutate(
landform = as.factor(landform),
plots = as.factor(plots),
subplot = as.factor(subplot),
rainfall = factor(rainfall, levels = c("low", "moderate" , "high")))
summary(total_plots)
summary(total_plots)
total_plots <- read_csv("plot_data/total_plots.csv")%>%
mutate(
landform = as.factor(landform),
plots = as.factor(plots),
subplot = as.factor(subplot),
rainfall = factor(rainfall, levels = c("low", "moderate" , "high")))
summary(total_plots)
rs.restartR()
remotes::install_github("traitecoevo/bmsma")
install.packages("remotes")
install.packages("remotes")
remotes::install_github("traitecoevo/bmsma")
summary(total_plots)
total_plots <- read_csv("plot_data/total_plots.csv")%>%
mutate(
landform = as.factor(landform),
plots = as.factor(plots),
subplot = as.factor(subplot),
rainfall = factor(rainfall, levels = c("low", "moderate" , "high")))
library(tidyverse)
library(readr)
total_plots <- read_csv("plot_data/total_plots.csv")%>%
mutate(
landform = as.factor(landform),
plots = as.factor(plots),
subplot = as.factor(subplot),
rainfall = factor(rainfall, levels = c("low", "moderate" , "high")))
summary(total_plots)
#calculate basal area
basal_area <- total_plots %>%
gather("d_10", "diamiter", starts_with ("d_"))%>%
mutate(basal_area = (diamiter*0.5)^2*3.14159265359)%>%
arrange(tree)%>%
filter(!is.na(diamiter))
#calculate basal area
basal_area <- total_plots %>%
gather("d_10", "diamiter", starts_with ("d_"))%>%
mutate(basal_area = (diamiter*0.5)^2*3.14159265359)%>%
arrange(tree)%>%
filter(!is.na(diamiter))%>%
filter(basal_area, diamiter > 2)
#calculate basal area
basal_area <- total_plots %>%
gather("d_10", "diamiter", starts_with ("d_"))%>%
mutate(basal_area = (diamiter*0.5)^2*3.14159265359)%>%
arrange(tree)%>%
filter(!is.na(diamiter))%>%
filter(diamiter >2)
summary(basal_area)
print(basal_area)
#calculate basal area
basal_area <- total_plots %>%
gather("d_10", "diamiter", starts_with ("d_"))%>%
mutate(basal_area = (diamiter*0.5)^2*3.14159265359)%>%
arrange(tree)%>%
filter(!is.na(diamiter))%>%
group_by(tree, height, landform, plots, rainfall, subplot, sub_plot_area, subplot_density, plot_density)%>%
summarise(basal_area = sum(basal_area),.groups = "drop")%>%
mutate(diamiter = (sqrt(basal_area/3.14159265359))*2)%>%
filter(diamiter >2)
summary(basal_area)
print(basal_area)
View(basal_area)
library(lmerTest)
library(emmeans)
#the interaction term (*) between log(basal_area) and rainfall allows the "height Vs basal areas" relationship to vary between levels of rainfall (or across sites).
final.height.basal.lm <- lmer(log(height) ~ log(basal_area) * rainfall + (1|plots/subplot), data = f.D2H_model, REML = T)
#calculate basal area and back transform
tree_structure <- total_plots %>%
gather("d_10", "diamiter", starts_with ("d_"))%>%  #gathered D10 measurements
mutate(basal_area = (diamiter*0.5)^2*3.14159265359)%>%  #transform to basal area
arrange(tree)%>%
filter(!is.na(diamiter))%>% #filter NAs
group_by(tree, height, landform, plots, rainfall, subplot, sub_plot_area, subplot_density, plot_density)%>%
summarise(basal_area = sum(basal_area),.groups = "drop")%>% #sum basal areas for each tree
mutate(diamiter = (sqrt(basal_area/3.14159265359))*2)%>% #back transform to sigle D measrument
filter(diamiter >2) #filter out small trees
#the interaction term (*) between log(basal_area) and rainfall allows the "height Vs basal areas" relationship to vary between levels of rainfall (or across sites).
final.height.basal.lm <- lmer(log(height) ~ log(basal_area) * rainfall + (1|plots/subplot), data = tree_structure, REML = T)
summary(final.height.basal.lm)
confint(final.basal.fit)
confint(final.height.basal.lm)
#the interaction term (*) between log(basal_area) and rainfall allows the "height Vs basal areas" relationship to vary between levels of rainfall (or across sites).
final.height.basal.lm <- lmer(log(height) ~ log(basal_area) * rainfall + (1|plots/subplot), data = tree_structure, REML = T)
summary(final.height.basal.lm)
confint(final.height.basal.lm)
qqnorm(residuals(final.height.basal.lm), pch = 1, frame = FALSE)
qqline(residuals(final.height.basal.lm), col = "steelblue", lwd = 2)
scatter.smooth(residuals(final.height.basal.lm) ~ fitted(final.height.basal.lm))
vif(final.height.basal.lm)
library(car)
vif(final.height.basal.lm)
# Extract the residuals from the model
height.basal.residuals <- residuals(final.height.basal.lm)
# Perform the ACF analysis
acf(height.basal.residuals)
#functions for BA Vs H
H.BA.FUN.L <- function(x) { 199.5371 * x^0.152}
H.BA.FUN.M <- function(x) { 183.8739 * x ^0.19183 }
H.BA.FUN.H <- function(x) {168.5445 * x^0.3054}
basal.vs.heigh_plots <- f.D2H_model%>%
ggplot(aes(basal_area, height, colour = rainfall))+
geom_point(aes(shape = landform))+
geom_function(fun = H.BA.FUN.L, n = 105, colour = "red", size = 1)+
geom_function(fun = H.BA.FUN.M, n = 105, colour = "forestgreen", size = 1)+
geom_function(fun = H.BA.FUN.H, n = 105, colour =  "deepskyblue3 ", size = 1)+
ylab("height (cm)")+
xlab(bquote("basal area "(cm^2)))+
ggtitle("A")+
theme_cowplot()+
xlim(0, 1200)+
theme(axis.title=element_text(size=12), legend.position = "none")
basal.vs.heigh_plots <- tree_structure%>%
ggplot(aes(basal_area, height, colour = rainfall))+
geom_point(aes(shape = landform))+
geom_function(fun = H.BA.FUN.L, n = 105, colour = "red", size = 1)+
geom_function(fun = H.BA.FUN.M, n = 105, colour = "forestgreen", size = 1)+
geom_function(fun = H.BA.FUN.H, n = 105, colour =  "deepskyblue3 ", size = 1)+
ylab("height (cm)")+
xlab(bquote("basal area "(cm^2)))+
ggtitle("A")+
theme_cowplot()+
xlim(0, 1200)+
theme(axis.title=element_text(size=12), legend.position = "none")
library(cowplot)
basal.vs.heigh_plots <- tree_structure%>%
ggplot(aes(basal_area, height, colour = rainfall))+
geom_point(aes(shape = landform))+
geom_function(fun = H.BA.FUN.L, n = 105, colour = "red", size = 1)+
geom_function(fun = H.BA.FUN.M, n = 105, colour = "forestgreen", size = 1)+
geom_function(fun = H.BA.FUN.H, n = 105, colour =  "deepskyblue3 ", size = 1)+
ylab("height (cm)")+
xlab(bquote("basal area "(cm^2)))+
ggtitle("A")+
theme_cowplot()+
xlim(0, 1200)+
theme(axis.title=element_text(size=12), legend.position = "none")
print(basal.vs.heigh_plots)
#ggsave("basal.vs.height_plots.png")
install.packages("smatr")
library(smatr)
View(tree_structure)
sma.ba_h.test <- sma(height~basal_area*rainfall, log="xy", data=tree_structure)
sma.ba_h.test
qqnorm(residuals(sma.ba_h.test), pch = 1, frame = FALSE)
qqline(residuals(sma.ba_h.test), col = "steelblue", lwd = 2)
scatter.smooth(residuals(sma.ba_h.test) ~ fitted(sma.ba_h.test))
# Extract the residuals from the model
height.basal.residuals <- residuals(sma.ba_h.test)
# Perform the ACF analysis
acf(height.basal.residuals)
summary(sma.ba_h.test)
#the interaction term (*) between log(basal_area) and rainfall allows the "height Vs basal areas" relationship to vary between levels of rainfall (or across sites).
final.height.basal.lm <- lmer(log(height) ~ log(basal_area) * rainfall + (1|plots/subplot), data = tree_structure, REML = T)
summary(final.height.basal.lm)
summary(sma.ba_h.test)
sma.ba_h.test <- sma(log(height) ~ log(basal_area) * rainfall, data=tree_structure)
sma.ba_h.test
summary(sma.ba_h.test)
sma.ba_h.test <- sma(height ~ basal_area * rainfall,  log="xy", data=tree_structure)
sma.ba_h.test
summary(sma.ba_h.test)
plot(sma.ba_h.test)
exp(2.038839) #low elevation
exp(1.942454) #mod elevation
exp(2.131653) #high elevation
#functions for BA Vs H
sma.H.BA.FUN.L <- function(x) { 7.681686 * x^0.2931996}
sma.H.BA.FUN.M <- function(x) { 6.975849 * x ^0.3480308 }
sma.H.BA.FUN.H <- function(x) {8.428788 * x^0.3720465}
sma.basal.vs.heigh_plots <- tree_structure%>%
ggplot(aes(basal_area, height, colour = rainfall))+
geom_point(aes(shape = landform))+
geom_function(fun = sma.H.BA.FUN.L, n = 105, colour = "red", size = 1)+
geom_function(fun = sma.H.BA.FUN.M, n = 105, colour = "forestgreen", size = 1)+
geom_function(fun = sma.H.BA.FUN.H, n = 105, colour =  "deepskyblue3 ", size = 1)+
ylab("height (cm)")+
xlab(bquote("basal area "(cm^2)))+
ggtitle("A")+
theme_cowplot()+
xlim(0, 1200)+
theme(axis.title=element_text(size=12), legend.position = "none")
print(sma.basal.vs.heigh_plots)
#functions for BA Vs H
sma.H.BA.FUN.L <- function(x) { 183 * x^0.2931996}
sma.H.BA.FUN.M <- function(x) { 183 * x ^0.3480308 }
sma.H.BA.FUN.H <- function(x) {183 * x^0.3720465}
sma.basal.vs.heigh_plots <- tree_structure%>%
ggplot(aes(basal_area, height, colour = rainfall))+
geom_point(aes(shape = landform))+
geom_function(fun = sma.H.BA.FUN.L, n = 105, colour = "red", size = 1)+
geom_function(fun = sma.H.BA.FUN.M, n = 105, colour = "forestgreen", size = 1)+
geom_function(fun = sma.H.BA.FUN.H, n = 105, colour =  "deepskyblue3 ", size = 1)+
ylab("height (cm)")+
xlab(bquote("basal area "(cm^2)))+
ggtitle("A")+
theme_cowplot()+
xlim(0, 1200)+
theme(axis.title=element_text(size=12), legend.position = "none")
print(sma.basal.vs.heigh_plots)
sma.int.BA_H<- sma(height~basal_area + rainfall, log="xy", type="shift", data=tree_structure)
print(sma.int.BA_H)
summary(sma.int.BA_H)
print(sma.ba_h.test)
plot(sma.ba_h.test)
sma.int.BA_H<- elev.com(height~basal_area + rainfall, log="xy", type="shift", data=tree_structure)
sma.int.BA_H<- elev.com(log(height) ~ log(basal_area) + rainfall, data=tree_structure)
sma.int.BA_H<- elev.com(log(height) ~ log(basal_area) + rainfall, with(tree_structure))
sma.int.BA_H<- with(tree_structure, elev.com(log(height), log10(basal_area), rainfall))
print(sma.int.BA_H)
summary(sma.int.BA_H)
print(sma.int.BA_H)
exp(5.003650) #low elevation
exp(4.472308) #mod elevation
exp(4.488246) #high elevation
#functions for BA Vs H
sma.H.BA.FUN.L <- function(x) {148.9559 * x^0.2931996}
sma.H.BA.FUN.M <- function(x) {87.55858 * x ^0.3480308 }
sma.H.BA.FUN.H <- function(x) {88.96526 * x^0.3720465}
sma.basal.vs.heigh_plots <- tree_structure%>%
ggplot(aes(basal_area, height, colour = rainfall))+
geom_point(aes(shape = landform))+
geom_function(fun = sma.H.BA.FUN.L, n = 105, colour = "red", size = 1)+
geom_function(fun = sma.H.BA.FUN.M, n = 105, colour = "forestgreen", size = 1)+
geom_function(fun = sma.H.BA.FUN.H, n = 105, colour =  "deepskyblue3 ", size = 1)+
ylab("height (cm)")+
xlab(bquote("basal area "(cm^2)))+
ggtitle("A")+
theme_cowplot()+
xlim(0, 1200)+
theme(axis.title=element_text(size=12), legend.position = "none")
print(sma.basal.vs.heigh_plots)
sma.int.BA_H<- with(tree_structure, elev.com(log(height), log10(basal_area), rainfall))
print(sma.int.BA_H)
exp(4.472308) #low elevation
exp(4.488246) #mod elevation
exp(5.003650) #high elevation
#functions for BA Vs H
sma.H.BA.FUN.L <- function(x) {87.55858 * x^0.2931996}
sma.H.BA.FUN.M <- function(x) {88.96526 * x ^0.3480308 }
sma.H.BA.FUN.H <- function(x) {148.9559 * x^0.3720465}
sma.basal.vs.heigh_plots <- tree_structure%>%
ggplot(aes(basal_area, height, colour = rainfall))+
geom_point(aes(shape = landform))+
geom_function(fun = sma.H.BA.FUN.L, n = 105, colour = "red", size = 1)+
geom_function(fun = sma.H.BA.FUN.M, n = 105, colour = "forestgreen", size = 1)+
geom_function(fun = sma.H.BA.FUN.H, n = 105, colour =  "deepskyblue3 ", size = 1)+
ylab("height (cm)")+
xlab(bquote("basal area "(cm^2)))+
ggtitle("A")+
theme_cowplot()+
xlim(0, 1200)+
theme(axis.title=element_text(size=12), legend.position = "none")
print(sma.basal.vs.heigh_plots)
print(sma.basal.vs.heigh_plots)
print(basal.vs.heigh_plots)
print(basal.vs.heigh_plots)
print(sma.basal.vs.heigh_plots)
sma.int.BA_H<- with(tree_structure, elev.com(log(height), log10(basal_area), rainfall))
sma.int.BA_H
print(sma.int.BA_H)
TukeyHSD(sma.ba_h.test)
library(emmeans)
pairs(emmeans(sma.ba_h.test, ~  rainfall))
View(sma.ba_h.test)
View(sma.ba_h.test)
