geom_abline(intercept = 3.859734, slope = 0.787788, linetype = "solid", color = "dark green", size = 1) +
geom_abline(intercept = 1.750087  , slope = -0.088450 , linetype = "solid", color = "blue", size = 1) +
labs(x = "Subplot Density", y = "Biomass/m2", color = "Rainfall", shape = "Landform") +
theme_minimal()
# plotted self thining
ggplot(stem_plots, aes(log(subplot_density), log(ave.AGB), colour = rainfall)) +
geom_point(aes(shape = factor(landform)))
# plotted maximum biomass efficiency frontiers
ggplot(stem_plots, aes(log(subplot_density), log(biomass.m2), colour = rainfall)) +
geom_point(aes(shape = factor(landform))) +
geom_abline(intercept = 2.268333, slope = 0.326692, linetype = "solid", color = "red", size = 1) +
geom_abline(intercept = 3.859734, slope = 0.787788, linetype = "solid", color = "dark green", size = 1) +
geom_abline(intercept = 1.750087  , slope = -0.088450 , linetype = "solid", color = "blue", size = 1) +
labs(x = "Subplot Density", y = "Biomass/m2", color = "Rainfall", shape = "Landform") +
theme_cowplot()
# plotted self thining
ggplot(stem_plots, aes(log(subplot_density), log(ave.AGB), colour = rainfall)) +
geom_point(aes(shape = factor(landform)))+
geom_abline(intercept = 2.268333, slope = 0.326692, linetype = "solid", color = "red", size = 1) +
geom_abline(intercept = 3.859734, slope = 0.787788, linetype = "solid", color = "dark green", size = 1) +
geom_abline(intercept =  3.417942  , slope = - -0.362591 , linetype = "solid", color = "blue", size = 1) +
# plotted self thining
ggplot(stem_plots, aes(log(subplot_density), log(ave.AGB), colour = rainfall)) +
geom_point(aes(shape = factor(landform)))+
geom_abline(intercept = 2.268333, slope = 0.326692, linetype = "solid", color = "red", size = 1) +
geom_abline(intercept = 3.859734, slope = 0.787788, linetype = "solid", color = "dark green", size = 1) +
geom_abline(intercept =  3.417942  , slope = - -0.362591 , linetype = "solid", color = "blue", size = 1)
# plotted self thining
ggplot(stem_plots, aes(log(subplot_density), log(ave.AGB), colour = rainfall)) +
geom_point(aes(shape = factor(landform)))+
geom_abline(intercept = 2.268333, slope = 0.326692, linetype = "solid", color = "red", size = 1) +
geom_abline(intercept = 3.859734, slope = 0.787788, linetype = "solid", color = "dark green", size = 1) +
geom_abline(intercept =  3.417942  , slope = -0.362591 , linetype = "solid", color = "blue", size = 1)
total_plots <- read_csv("plot_data/total_plots.csv")%>%
mutate(
landform = as.factor(landform),
plots = as.factor(plots),
rainfall = factor(rainfall, levels = c("low", "moderate" , "high")))
summary(total_plots)
#calculate basal area
basal_area <- total_plots %>%
gather("d_10", "diamiter", starts_with ("d_"))%>%
mutate(basal_area = (diamiter*0.5)^2*3.14159265359)%>%
arrange(tree)%>%
filter(!is.na(diamiter))
# using the accacia allometric equation from feller 1980 we will calculate biomass for each tree based on a "stem by stem" analysis.
# see "Review of Allometric Relationships for Estimating Woody Biomass for New South Wales, the Australian Capital Territory, Victoria, Tasmania and South Australia" (page 36)
D2H_model <- basal_area %>%
mutate(
dbh = (diamiter*0.798)-0.577,
stem_log_biomass = log(1.9+ 424.9 * (dbh/100)^2 * (height/100)),
stem_biomass = exp(stem_log_biomass),
branch_log_biomass = log(208) + log((dbh/100)^2 * (height/100)),
branch_biomass = exp(branch_log_biomass),
leave_log_biomass = log(8) + log((dbh/100)^2 * (height/100)),
leave_biomass = exp(leave_log_biomass))%>%
group_by(tree, height, landform, plots, rainfall, subplot, sub_plot_area, subplot_density, plot_density)%>%
summarise(trunk_log_biomass = sum(stem_log_biomass),
trunk_biomass = sum(stem_biomass),
lim_log_biomass = sum(branch_log_biomass),
lim_biomass = sum(branch_biomass),
phylode_log_biomass = sum(leave_log_biomass),
phylode_biomass = sum(leave_biomass),
diamiter = sum(dbh),
basal_area = sum(basal_area),
.groups = "drop")%>%
mutate(
biomass = trunk_biomass + lim_biomass + phylode_biomass,
log_biomass = log(biomass))
#d2h plot level biomass
plot_D2h <- D2H_model%>%
aggregate(biomass ~ subplot + landform + sub_plot_area + plots + rainfall + subplot_density + plot_density, sum)%>%
mutate(
biomass.m2 = biomass/sub_plot_area,
logbiomass.m2 = log(biomass.m2),
log.sub.dens = log(subplot_density))
#plot level biomass
avereage_suplot_biomass <- D2H_model %>%
group_by(subplot)%>%
summarise(
ave.AGB = mean(biomass)) %>% ungroup()
stem_plots <- left_join(plot_D2h, avereage_suplot_biomass, by = "subplot")
summary(stem_plots)
#combind basal area for multi stemmed trees for a "combined stem analysis"
ind_biomass <- basal_area%>%
group_by(tree, height, landform, plots, rainfall, subplot, sub_plot_area, subplot_density, plot_density)%>%
summarise(basal_area = sum(basal_area),.groups = "drop")%>%
mutate(
#back tranform total_basal_area to diamiter
diamiter = case_when( rainfall == "low" ~ ((sqrt(basal_area/3.14159265359))*2),
rainfall == "moderate" ~ ((sqrt(basal_area/3.14159265359))*2),
rainfall == "high" ~ ((sqrt(basal_area/3.14159265359))*2)*0.798)-0.577, # converting d10 to d130
# Equations taken from -> Paul et al, "testing the generality of above ground ind_biomass allometry across plant functional types at the continent scale" -> Fmulti "ln(AGB) = 2.474ln(D10)-2.757" used for lower rainfall sites (page 9)
logAGB = case_when(rainfall == 'low' ~ 2.474*log(diamiter)-2.757,
rainfall == 'moderate' ~ 2.474*log(diamiter)-2.757,
rainfall == 'high' ~ 2.220*log(diamiter)-1.693),
# correctional factors taken form relevant equations in respective papers. CF for high rainfall taken form average of Acacia trees paul and roxburgh 2013.
AGB = case_when( rainfall == 'low' ~ exp(logAGB)*1.0787,
rainfall == 'moderate' ~ exp(logAGB)*1.0787,
rainfall == 'high' ~ exp(logAGB)*1.0436))
#plot level biomass
plot_biomass <- ind_biomass%>%
aggregate(AGB ~ subplot + landform + sub_plot_area + plots + rainfall + subplot_density + plot_density, sum)%>%
mutate(
biomass.m2 = AGB/sub_plot_area,
logbiomass.m2 = log(biomass.m2),
log.sub.dens = log(subplot_density))
#create frontier model.
self.thin <- sfa(log(ave.AGB) ~ log.sub.dens*rainfall/landform, data = stem_plots)
summary(self.thin, extraPar = T)
# testing performance of model against OLS
lrtest(self.thin)
# plotted self thining
ggplot(stem_plots, aes(log(subplot_density), log(ave.AGB), colour = rainfall)) +
geom_point(aes(shape = factor(landform)))+
geom_abline(intercept = 3.147408, slope = 0.020039, linetype = "solid", color = "red", size = 1) +
geom_abline(intercept = 3.859734, slope = 0.787788, linetype = "solid", color = "dark green", size = 1) +
geom_abline(intercept =  3.417942  , slope = -0.362591 , linetype = "solid", color = "blue", size = 1)
total_plots <- read_csv("plot_data/total_plots.csv")%>%
mutate(
landform = as.factor(landform),
plots = as.factor(plots),
rainfall = factor(rainfall, levels = c("moderate", "lower" , "high")))
summary(total_plots)
#calculate basal area
basal_area <- total_plots %>%
gather("d_10", "diamiter", starts_with ("d_"))%>%
mutate(basal_area = (diamiter*0.5)^2*3.14159265359)%>%
arrange(tree)%>%
filter(!is.na(diamiter))
# using the accacia allometric equation from feller 1980 we will calculate biomass for each tree based on a "stem by stem" analysis.
# see "Review of Allometric Relationships for Estimating Woody Biomass for New South Wales, the Australian Capital Territory, Victoria, Tasmania and South Australia" (page 36)
D2H_model <- basal_area %>%
mutate(
dbh = (diamiter*0.798)-0.577,
stem_log_biomass = log(1.9+ 424.9 * (dbh/100)^2 * (height/100)),
stem_biomass = exp(stem_log_biomass),
branch_log_biomass = log(208) + log((dbh/100)^2 * (height/100)),
branch_biomass = exp(branch_log_biomass),
leave_log_biomass = log(8) + log((dbh/100)^2 * (height/100)),
leave_biomass = exp(leave_log_biomass))%>%
group_by(tree, height, landform, plots, rainfall, subplot, sub_plot_area, subplot_density, plot_density)%>%
summarise(trunk_log_biomass = sum(stem_log_biomass),
trunk_biomass = sum(stem_biomass),
lim_log_biomass = sum(branch_log_biomass),
lim_biomass = sum(branch_biomass),
phylode_log_biomass = sum(leave_log_biomass),
phylode_biomass = sum(leave_biomass),
diamiter = sum(dbh),
basal_area = sum(basal_area),
.groups = "drop")%>%
mutate(
biomass = trunk_biomass + lim_biomass + phylode_biomass,
log_biomass = log(biomass))
#d2h plot level biomass
plot_D2h <- D2H_model%>%
aggregate(biomass ~ subplot + landform + sub_plot_area + plots + rainfall + subplot_density + plot_density, sum)%>%
mutate(
biomass.m2 = biomass/sub_plot_area,
logbiomass.m2 = log(biomass.m2),
log.sub.dens = log(subplot_density))
#plot level biomass
avereage_suplot_biomass <- D2H_model %>%
group_by(subplot)%>%
summarise(
ave.AGB = mean(biomass)) %>% ungroup()
stem_plots <- left_join(plot_D2h, avereage_suplot_biomass, by = "subplot")
summary(stem_plots)
#create frontier model.
self.thin <- sfa(log(ave.AGB) ~ log.sub.dens*rainfall/landform, data = stem_plots)
#create frontier model.
self.thin <- sfa(log(ave.AGB) ~ log.sub.dens*rainfall/landform, data = stem_plots)
total_plots <- read_csv("plot_data/total_plots.csv")%>%
mutate(
landform = as.factor(landform),
plots = as.factor(plots),
rainfall = factor(rainfall, levels = c("moderate", "lower" , "high")))
summary(total_plots)
#calculate basal area
basal_area <- total_plots %>%
gather("d_10", "diamiter", starts_with ("d_"))%>%
mutate(basal_area = (diamiter*0.5)^2*3.14159265359)%>%
arrange(tree)%>%
filter(!is.na(diamiter))
# using the accacia allometric equation from feller 1980 we will calculate biomass for each tree based on a "stem by stem" analysis.
# see "Review of Allometric Relationships for Estimating Woody Biomass for New South Wales, the Australian Capital Territory, Victoria, Tasmania and South Australia" (page 36)
D2H_model <- basal_area %>%
mutate(
dbh = (diamiter*0.798)-0.577,
stem_log_biomass = log(1.9+ 424.9 * (dbh/100)^2 * (height/100)),
stem_biomass = exp(stem_log_biomass),
branch_log_biomass = log(208) + log((dbh/100)^2 * (height/100)),
branch_biomass = exp(branch_log_biomass),
leave_log_biomass = log(8) + log((dbh/100)^2 * (height/100)),
leave_biomass = exp(leave_log_biomass))%>%
group_by(tree, height, landform, plots, rainfall, subplot, sub_plot_area, subplot_density, plot_density)%>%
summarise(trunk_log_biomass = sum(stem_log_biomass),
trunk_biomass = sum(stem_biomass),
lim_log_biomass = sum(branch_log_biomass),
lim_biomass = sum(branch_biomass),
phylode_log_biomass = sum(leave_log_biomass),
phylode_biomass = sum(leave_biomass),
diamiter = sum(dbh),
basal_area = sum(basal_area),
.groups = "drop")%>%
mutate(
biomass = trunk_biomass + lim_biomass + phylode_biomass,
log_biomass = log(biomass))
#d2h plot level biomass
plot_D2h <- D2H_model%>%
aggregate(biomass ~ subplot + landform + sub_plot_area + plots + rainfall + subplot_density + plot_density, sum)%>%
mutate(
biomass.m2 = biomass/sub_plot_area,
logbiomass.m2 = log(biomass.m2),
log.sub.dens = log(subplot_density))
#plot level biomass
avereage_suplot_biomass <- D2H_model %>%
group_by(subplot)%>%
summarise(
ave.AGB = mean(biomass)) %>% ungroup()
stem_plots <- left_join(plot_D2h, avereage_suplot_biomass, by = "subplot")
summary(stem_plots)
#create frontier model.
self.thin <- sfa(log(ave.AGB) ~ log.sub.dens*rainfall/landform, data = stem_plots)
#Plant vessel's Data
#build data set
vessels <- read_csv("trait_data/vessel.csv")%>%
mutate(rainfalllow = ifelse (grepl ("STURT", name), "low", "moderate"),
rainfallhigh = ifelse (grepl ("GUNDA", name), "high", "moderate"),
landform = ifelse (grepl ("SHED", name), "shed", "acc"),
rainfall = ifelse(rainfalllow == "low", "low",
ifelse(rainfallhigh == "high", "high", "moderate")),
rainfall = as.factor(rainfall),
landform = as.factor(landform),
length = as.numeric(length),
width = as.numeric(width),
rainfall = factor(rainfall, levels = c("low", "moderate", "high")))%>%
#extract tree as a grouping factor from the name variable
mutate(
tree = substr(name, start = 1, stop = 13))%>%
#get log transformations of various variables
mutate(log.roundness = log(roundess),
log.area = log(area))
library(lme4) #mixed effect linear models
library(lmerTest)
library(emmeans)
library(tidyverse)
library(readr)
library(nlme)
library(ggpmisc)
library(cowplot)
library(car)
library(forcats)
library(mgcv)
library(glmmLasso)
library (glmmTMB)
library(sp)
library(gstat)
library(ape)
library(ggpmisc)
library(multcomp)
library(MASS)
library(betareg)
library(glmmTMB)
#Plant vessel's Data
#build data set
vessels <- read_csv("trait_data/vessel.csv")%>%
mutate(rainfalllow = ifelse (grepl ("STURT", name), "low", "moderate"),
rainfallhigh = ifelse (grepl ("GUNDA", name), "high", "moderate"),
landform = ifelse (grepl ("SHED", name), "shed", "acc"),
rainfall = ifelse(rainfalllow == "low", "low",
ifelse(rainfallhigh == "high", "high", "moderate")),
rainfall = as.factor(rainfall),
landform = as.factor(landform),
length = as.numeric(length),
width = as.numeric(width),
rainfall = factor(rainfall, levels = c("low", "moderate", "high")))%>%
#extract tree as a grouping factor from the name variable
mutate(
tree = substr(name, start = 1, stop = 13))%>%
#get log transformations of various variables
mutate(log.roundness = log(roundess),
log.area = log(area))
f.vessels <- vessels%>%
filter(, l_ratio > 0.20)%>%
filter(, roundess > 0.15)%>%
filter(, area < 3000)%>%
filter(, area > 60)%>%
filter(, width > 3)%>%
#turn point values into area (pixel spacial resolution 1.17um across images on average with small variance (total range = 0.014um))
mutate(area = 1.17*area,
length = 1.17*length,
width = 1.17*width,
perimeter = 1.17*perimeter)
summary(vessels)
#leaf data
total_leaves <- read_csv("trait_data/leaves/total_leaves.csv")%>%
mutate( rainfall = factor(rainfall, levels = c("low", "moderate", "high")))
summary(total_leaves)
trait_SLA <- total_leaves%>%
mutate(
tree_number = as.factor(tree_number),
#mm^2/mg
sla = leaf_area/leaf_mass,
volume = leaf_area * leaf_thickness
)%>%
arrange(tree_number)%>%
filter(!is.na(sla))%>%
aggregate(sla~tree_number + landform + volume + leaf_area + leaf_thickness  + leaf_mass + wood_density + rainfall,mean)
summary(trait_SLA)
# Wood density data
total_wood <- read_csv("~/Thesis/r_studio/trait_data/wood/total_wood.csv")%>%
mutate( rainfall = factor(rainfall, levels = c("low", "moderate", "high")))
summary(total_wood)
heightvsrainfall <- f.D2H_model%>%
ggplot( aes( rainfall, height, fill = rainfall))+
geom_boxplot(notch = F)+
#scale_y_log10()+
ylab("height (cm)")+
xlab(" ")+
ggtitle("d")+
theme_cowplot()+
theme(axis.title=element_text(size=12),
legend.position = "none")
print(heightvsrainfall)
#ggsave("heightvsrainfall.png")
heightvsrainfall <- f.D2H_model%>%
ggplot( aes( rainfall, height, fill = rainfall))+
geom_boxplot(notch = F)+
scale_y_log10()+
ylab("height (cm)")+
xlab(" ")+
ggtitle("d")+
theme_cowplot()+
theme(axis.title=element_text(size=12),
legend.position = "none")
print(heightvsrainfall)
#ggsave("heightvsrainfall.png")
ind.biomass <- f.D2H_model %>%
ggplot(aes(rainfall, biomass, fill = rainfall))+
geom_boxplot(notch = F)+
#scale_y_log10()+
ylab(bquote("biomass"(kg ~ tree^-1)))+
xlab(" ")+
ggtitle("d2h")+
theme_cowplot()+
theme(legend.position = "none",
axis.title=element_text(size=12))
print(ind.biomass)
ind.biomass <- f.D2H_model %>%
ggplot(aes(rainfall, biomass, fill = rainfall))+
geom_boxplot(notch = F)+
scale_y_log10()+
ylab(bquote("biomass"(kg ~ tree^-1)))+
xlab(" ")+
ggtitle("d2h")+
theme_cowplot()+
theme(legend.position = "none",
axis.title=element_text(size=12))
print(ind.biomass)
#ggsave("ind.biomass.png")
f.ind_biomass%>%
ggplot(aes(rainfall, AGB, fill = rainfall))+
geom_boxplot(notch = F)+
scale_y_log10()+
ylab(bquote("biomass"(kg ~ tree^-1)))+
xlab(" ")+
ggtitle("combined")+
theme_cowplot()+
theme(legend.position = "none",
axis.title=element_text(size=12))
f.pau_tree %>%
ggplot(aes(rainfall, AGB, fill = rainfall))+
geom_boxplot( notch = F)+
scale_y_log10()+
ylab(bquote("biomass"(kg ~ tree^-1)))+
xlab(" ")+
ggtitle("tree")+
theme_cowplot()+
theme(legend.position = "none",
axis.title=element_text(size=12))
library(lme4) #mixed effect linear models
library(lmerTest)
library(emmeans)
library(tidyverse)
library(readr)
library(nlme)
library(ggpmisc)
library(cowplot)
library(car)
library(forcats)
library(mgcv)
library(glmmLasso)
library (glmmTMB)
library(sp)
library(gstat)
library(ape)
library(ggpmisc)
library(multcomp)
library(MASS)
library(betareg)
library(glmmTMB)
#Plant vessel's Data
#build data set
vessels <- read_csv("trait_data/vessel.csv")%>%
mutate(rainfalllow = ifelse (grepl ("STURT", name), "low", "moderate"),
rainfallhigh = ifelse (grepl ("GUNDA", name), "high", "moderate"),
landform = ifelse (grepl ("SHED", name), "shed", "acc"),
rainfall = ifelse(rainfalllow == "low", "low",
ifelse(rainfallhigh == "high", "high", "moderate")),
rainfall = as.factor(rainfall),
landform = as.factor(landform),
length = as.numeric(length),
width = as.numeric(width),
rainfall = factor(rainfall, levels = c("low", "moderate", "high")))%>%
#extract tree as a grouping factor from the name variable
mutate(
tree = substr(name, start = 1, stop = 13))%>%
#get log transformations of various variables
mutate(log.roundness = log(roundess),
log.area = log(area))
f.vessels <- vessels%>%
filter(, l_ratio > 0.20)%>%
filter(, roundess > 0.15)%>%
filter(, area < 3000)%>%
filter(, area > 60)%>%
filter(, width > 3)%>%
#turn point values into area (pixel spacial resolution 1.17um across images on average with small variance (total range = 0.014um))
mutate(area = 1.17*area,
length = 1.17*length,
width = 1.17*width,
perimeter = 1.17*perimeter)
summary(vessels)
#create subplot level statistics
plot_D2h <- D2H_model%>%
group_by( subplot )%>%
summarise(
sub_plot_area = mean(sub_plot_area),
subplot_density = mean(subplot_density),
ave.biomass = mean(biomass),
diameter = mean(diamiter),
tot.biomass = sum(biomass),
stem_area = mean(3.1415/4*diamiter^2),
biomass.m2 = tot.biomass/sub_plot_area,
plots = first(plots),
plot_density = mean(plot_density),
rainfall = first(rainfall),
landform = first(landform))%>%
ungroup()%>%
mutate(
logbiomass.m2 = log(biomass.m2),
log.sub.dens = log(subplot_density))
total_plots <- read_csv("plot_data/total_plots.csv")%>%
mutate(
landform = as.factor(landform),
plots = as.factor(plots),
subplot = as.factor(subplot),
rainfall = factor(rainfall, levels = c("low", "moderate" , "high")))
summary(total_plots)
total_wood <- read_csv("~/Thesis/r_studio/trait_data/wood/total_wood.csv")%>%
mutate( rainfall = factor(rainfall, levels = c("low", "moderate", "high")))
summary(total_wood)
#calculate basal area
basal_area <- total_plots %>%
gather("d_10", "diamiter", starts_with ("d_"))%>%
mutate(basal_area = (diamiter*0.5)^2*3.14159265359)%>%
arrange(tree)%>%
filter(!is.na(diamiter))
# using the accacia allometric equation from feller 1980 we will calculate biomass for each tree based on a "stem by stem" analysis.
# see "Review of Allometric Relationships for Estimating Woody Biomass for New South Wales, the Australian Capital Territory, Victoria, Tasmania and South Australia" (page 36)
D2H_model <- basal_area %>%
group_by(tree, height, landform, plots, rainfall, subplot, sub_plot_area, subplot_density, plot_density)%>%
summarise(basal_area = sum(basal_area),.groups = "drop")%>%
mutate(diamiter = (sqrt(basal_area/3.14159265359))*2,
dbh = (diamiter*0.798)-0.577,# tapering equation from Paul et al, "testing the generality of above ground ind_biomass allometry across plant functional types at the continent scale"
stem_log_biomass = log(1.9+ 424.9 *(dbh/100)^2 * (height/100)), #ensure units of measurement are converted to cm
stem_biomass = exp(stem_log_biomass),
branch_log_biomass = log(208) + log((dbh/100)^2 * (height/100)),
branch_biomass = exp(branch_log_biomass),
leave_log_biomass = log(8) + log((dbh/100)^2 * (height/100)),
leave_biomass = exp(leave_log_biomass))%>%
mutate(
biomass = stem_biomass + branch_biomass + leave_biomass,
log_biomass = log(biomass))
#filter out smaller trees due to allometeric differences in juveniles
f.D2H_model <- filter(D2H_model, diamiter > 2)
allometry_total <- read_csv("allometry/allometry_total.csv")%>%
mutate(
landform = as.factor(landform),
rainfall = factor(rainfall, levels = c( "low", "moderate", "high")))
summary(allometry_total)
#calcualte basal area
allo_basal <- allometry_total %>%
gather("d10", "diamiter", starts_with ("d10"))%>%
mutate(basal_area = (diamiter*0.5)^2*3.14159265359)%>%
arrange(tree)%>%
filter(!is.na(diamiter))
canopy_volume <- allo_basal%>%
group_by(tree, canopy_1, canopy_2, `95_Canopy`, tree_height, landform, rainfall)%>%
summarise(basal_area = sum(basal_area),.groups = "drop")%>%
mutate(canopy_height = ((tree_height - `95_Canopy`)/2),  # divide by 2 to get the semi-axis
canopy_length = canopy_1/2,
canopy_bredth = canopy_2/2,
canopy_volume = (3/4 * 3.141593 * canopy_height *canopy_bredth * canopy_length)/1000000,# volume of an ellipsoid. Divide by 1,000,000 to get m^3
log.tree.H = log(tree_height),
log.canopy.V = log(canopy_volume),
log.basal_area = log(basal_area))%>%
filter(!is.na(canopy_volume))%>%
filter(!is.na(log.canopy.V))
summary(allo_basal)
final.ind.tree.fit <- lmer(log_biomass ~  rainfall  + (1|landform/plots/subplot), data = f.D2H_model, REML = T)
summary(final.ind.tree.fit)
